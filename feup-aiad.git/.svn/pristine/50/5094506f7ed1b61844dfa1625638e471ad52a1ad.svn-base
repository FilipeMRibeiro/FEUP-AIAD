<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/REC-html4/loose.dtd">
<HTML>
<HEAD>
<!-- Generated by DocFlex/Doclet 1.6.1 on Tue Sep 01 14:08:05 BST 2015 -->
<TITLE>IteratedAchieveREInitiator (SAJaS)</TITLE>
<SCRIPT type="text/javascript">
    window.onload = function() {
        if (location.href.indexOf('is-external=true') == -1)
            parent.document.title="IteratedAchieveREInitiator (SAJaS)";
    }
</SCRIPT>
<LINK REL="stylesheet" TYPE="text/css" HREF="../../stylesheet.css" TITLE="Style">
</HEAD>
<BODY>
<TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="0" BORDER="0">
<TR VALIGN="top">
<TD COLSPAN="2"><TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="1" BORDER="0">
<TR>
<TD COLSPAN="2" CLASS="tc1"><TABLE CELLSPACING="3" CELLPADDING="0" BORDER="0">
<TR>
<TD><A HREF="../../overview-summary.html"><SPAN CLASS="f3">Overview</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="package-summary.html"><SPAN CLASS="f3">Package</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD COLSPAN="2" CLASS="tc2"><SPAN CLASS="f1">&nbsp;</SPAN><SPAN CLASS="f2">Class</SPAN><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="package-tree.html"><SPAN CLASS="f3">Tree</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="../../deprecated-list.html"><SPAN CLASS="f3">Deprecated</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="../../index-all.html"><SPAN CLASS="f3">Index</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="../../help-doc.html"><SPAN CLASS="f3">Help</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD><A HREF="ContractNetResponder.html" CLASS="f5">PREV CLASS</A><SPAN CLASS="f4">&nbsp;&nbsp;&nbsp;</SPAN><A HREF="ProposeInitiator.html" CLASS="f5">NEXT CLASS</A></TD>
<TD><A HREF="../../index.html?sajas/proto/IteratedAchieveREInitiator.html" TARGET="_top" CLASS="f5">FRAMES</A><SPAN CLASS="f4">&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><A HREF="IteratedAchieveREInitiator.html" TARGET="_top" CLASS="f5">NO FRAMES</A><SPAN CLASS="f4">&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><A HREF="../../all-classes-summary.html" CLASS="f5">All Classes</A></TD>
</TR>
<TR>
<TD><SPAN CLASS="f4">SUMMARY:&nbsp;<A HREF="#a1">NESTED</A>&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></SPAN></TD>
<TD><SPAN CLASS="f4">DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></SPAN></TD>
</TR>
</TABLE>
</TD>
</TR>
</TABLE>
<HR>
<DIV CLASS="p16"><SPAN CLASS="f16">sajas.proto</SPAN></DIV><DIV CLASS="p17"><SPAN CLASS="f8">Class IteratedAchieveREInitiator</SPAN></DIV><DIV CLASS="p18"><SPAN CLASS="f15">java.lang.Object</SPAN></DIV><DIV CLASS="p7"><SPAN CLASS="f15">&nbsp;&nbsp;<IMG SRC="../../resources/inherit.gif" WIDTH="15" HEIGHT="14"><A HREF="../core/behaviours/Behaviour.html">sajas.core.behaviours.Behaviour</A></SPAN></DIV><DIV CLASS="p7"><SPAN CLASS="f15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<IMG SRC="../../resources/inherit.gif" WIDTH="15" HEIGHT="14"><A HREF="../core/behaviours/CompositeBehaviour.html">sajas.core.behaviours.CompositeBehaviour</A></SPAN></DIV><DIV CLASS="p7"><SPAN CLASS="f15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<IMG SRC="../../resources/inherit.gif" WIDTH="15" HEIGHT="14"><A HREF="../core/behaviours/SerialBehaviour.html">sajas.core.behaviours.SerialBehaviour</A></SPAN></DIV><DIV CLASS="p7"><SPAN CLASS="f15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<IMG SRC="../../resources/inherit.gif" WIDTH="15" HEIGHT="14"><A HREF="../core/behaviours/FSMBehaviour.html">sajas.core.behaviours.FSMBehaviour</A></SPAN></DIV><DIV CLASS="p7"><SPAN CLASS="f15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<IMG SRC="../../resources/inherit.gif" WIDTH="15" HEIGHT="14"><A HREF="AchieveREInitiator.html">sajas.proto.AchieveREInitiator</A></SPAN></DIV><DIV CLASS="p7"><SPAN CLASS="f15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<IMG SRC="../../resources/inherit.gif" WIDTH="15" HEIGHT="14"></SPAN><SPAN CLASS="f17">sajas.proto.IteratedAchieveREInitiator</SPAN></DIV><DIV CLASS="p14"><SPAN CLASS="f7">All Implemented Interfaces:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>jade.util.leap.Serializable, Serializable</DIV></DD></DL>
<DIV CLASS="p19"><HR></DIV>
<DIV CLASS="p15"><SPAN CLASS="f15">public class </SPAN><SPAN CLASS="f17">IteratedAchieveREInitiator</SPAN></DIV><DIV><SPAN CLASS="f15">extends <A HREF="AchieveREInitiator.html" title="class in sajas.proto">AchieveREInitiator</A></SPAN></DIV><DIV CLASS="p2">Note: this class has been re-implemented to redirect the use of the agent and behaviour classes to SAJaS versions.</DIV><DIV CLASS="p2"><SPAN CLASS="f7">Author:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>hlc</DIV></DD></DL>
<DIV><SPAN CLASS="f7">See Also:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">jade.proto.IteratedAchieveREInitiator</SPAN></DIV></DD></DL>
<DIV CLASS="p15"><HR></DIV>
<DIV CLASS="p2">
<A NAME="a1"></A><TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc1"><SPAN CLASS="f7">Nested classes/interfaces inherited from class sajas.core.behaviours.<A HREF="../core/behaviours/Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></TD>
</TR>
<TR>
<TD><SPAN CLASS="f15"><A HREF="../core/behaviours/Behaviour.RunnableChangedEvent.html">Behaviour.RunnableChangedEvent</A></SPAN></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<A NAME="field_summary"></A><TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR BGCOLOR="#CCCCFF">
<TD COLSPAN="3" WIDTH="87.3%"><SPAN CLASS="f8">Field Summary</SPAN></TD>
</TR>
<TR>
<TD WIDTH="1%" ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">String</SPAN></DIV></TD>
<TD COLSPAN="2" WIDTH="86.3%" VALIGN="top"><SPAN CLASS="f17"><A HREF="#ALL_NEXT_REQUESTS_KEY">ALL_NEXT_REQUESTS_KEY</A></SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Key to retrieve from the DataStore of the behaviour the vector of ACLMessage objects that will be sent at next round.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">static&nbsp;String</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#REINIT">REINIT</A></SPAN></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc1"><SPAN CLASS="f7">Fields inherited from class sajas.proto.<A HREF="AchieveREInitiator.html" title="class in sajas.proto">AchieveREInitiator</A></SPAN></TD>
</TR>
<TR>
<TD><SPAN CLASS="f15"><A HREF="AchieveREInitiator.html#ALL_INITIATIONS_K">ALL_INITIATIONS_K</A>, <A HREF="AchieveREInitiator.html#ALL_REQUESTS_KEY">ALL_REQUESTS_KEY</A>, <A HREF="AchieveREInitiator.html#ALL_RESPONSES_KEY">ALL_RESPONSES_KEY</A>, <A HREF="AchieveREInitiator.html#ALL_RESULT_NOTIFICATIONS_KEY">ALL_RESULT_NOTIFICATIONS_KEY</A>, <A HREF="AchieveREInitiator.html#CHECK_AGAIN">CHECK_AGAIN</A>, <A HREF="AchieveREInitiator.html#CHECK_IN_SEQ">CHECK_IN_SEQ</A>, <A HREF="AchieveREInitiator.html#CHECK_SESSIONS">CHECK_SESSIONS</A>, <A HREF="AchieveREInitiator.html#DUMMY_FINAL">DUMMY_FINAL</A>, <A HREF="AchieveREInitiator.html#HANDLE_AGREE">HANDLE_AGREE</A>, <A HREF="AchieveREInitiator.html#HANDLE_ALL_RESPONSES">HANDLE_ALL_RESPONSES</A>, <A HREF="AchieveREInitiator.html#HANDLE_ALL_RESULT_NOTIFICATIONS">HANDLE_ALL_RESULT_NOTIFICATIONS</A>, <A HREF="AchieveREInitiator.html#HANDLE_FAILURE">HANDLE_FAILURE</A>, <A HREF="AchieveREInitiator.html#HANDLE_INFORM">HANDLE_INFORM</A>, <A HREF="AchieveREInitiator.html#HANDLE_NOT_UNDERSTOOD">HANDLE_NOT_UNDERSTOOD</A>, <A HREF="AchieveREInitiator.html#HANDLE_OUT_OF_SEQ">HANDLE_OUT_OF_SEQ</A>, <A HREF="AchieveREInitiator.html#HANDLE_REFUSE">HANDLE_REFUSE</A>, <A HREF="AchieveREInitiator.html#INITIATION_K">INITIATION_K</A>, <A HREF="AchieveREInitiator.html#PREPARE_INITIATIONS">PREPARE_INITIATIONS</A>, <A HREF="AchieveREInitiator.html#RECEIVE_REPLY">RECEIVE_REPLY</A>, <A HREF="AchieveREInitiator.html#REPLY_K">REPLY_K</A>, <A HREF="AchieveREInitiator.html#REPLY_KEY">REPLY_KEY</A>, <A HREF="AchieveREInitiator.html#replyReceiver">replyReceiver</A>, <A HREF="AchieveREInitiator.html#replyTemplate">replyTemplate</A>, <A HREF="AchieveREInitiator.html#REQUEST_KEY">REQUEST_KEY</A>, <A HREF="AchieveREInitiator.html#SEND_INITIATIONS">SEND_INITIATIONS</A>, <A HREF="AchieveREInitiator.html#sessions">sessions</A></SPAN></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc1"><SPAN CLASS="f7">Fields inherited from class sajas.core.behaviours.<A HREF="../core/behaviours/FSMBehaviour.html" title="class in sajas.core.behaviours">FSMBehaviour</A></SPAN></TD>
</TR>
<TR>
<TD><SPAN CLASS="f15"><A HREF="../core/behaviours/FSMBehaviour.html#currentName">currentName</A>, <A HREF="../core/behaviours/FSMBehaviour.html#lastStates">lastStates</A></SPAN></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc1"><SPAN CLASS="f7">Fields inherited from class sajas.core.behaviours.<A HREF="../core/behaviours/CompositeBehaviour.html" title="class in sajas.core.behaviours">CompositeBehaviour</A></SPAN></TD>
</TR>
<TR>
<TD><SPAN CLASS="f15"><A HREF="../core/behaviours/CompositeBehaviour.html#currentExecuted">currentExecuted</A></SPAN></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc1"><SPAN CLASS="f7">Fields inherited from class sajas.core.behaviours.<A HREF="../core/behaviours/Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></TD>
</TR>
<TR>
<TD><SPAN CLASS="f15"><A HREF="../core/behaviours/Behaviour.html#myAgent">myAgent</A>, <A HREF="../core/behaviours/Behaviour.html#myEvent">myEvent</A>, <A HREF="../core/behaviours/Behaviour.html#NOTIFY_DOWN">NOTIFY_DOWN</A>, <A HREF="../core/behaviours/Behaviour.html#NOTIFY_UP">NOTIFY_UP</A>, <A HREF="../core/behaviours/Behaviour.html#parent">parent</A>, <A HREF="../core/behaviours/Behaviour.html#STATE_BLOCKED">STATE_BLOCKED</A>, <A HREF="../core/behaviours/Behaviour.html#STATE_READY">STATE_READY</A>, <A HREF="../core/behaviours/Behaviour.html#STATE_RUNNING">STATE_RUNNING</A></SPAN></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<A NAME="constructor_summary"></A><TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR BGCOLOR="#CCCCFF">
<TD COLSPAN="3" WIDTH="87.3%"><SPAN CLASS="f8">Constructor Summary</SPAN></TD>
</TR>
<TR>
<TD COLSPAN="3" WIDTH="87.3%" VALIGN="top"><SPAN CLASS="f17"><A HREF="#IteratedAchieveREInitiator(sajas.core.Agent, jade.lang.acl.ACLMessage)">IteratedAchieveREInitiator</A></SPAN><SPAN CLASS="f15">(<A HREF="../core/Agent.html" title="class in sajas.core">Agent</A> a, jade.lang.acl.ACLMessage msg)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Construct an <code>IteratedAchieveREInitiator</code> with an empty DataStore</DIV></TD>
</TR>
<TR>
<TD COLSPAN="3" VALIGN="top"><SPAN CLASS="f17"><A HREF="#IteratedAchieveREInitiator(sajas.core.Agent, jade.lang.acl.ACLMessage, sajas.core.behaviours.DataStore)">IteratedAchieveREInitiator</A></SPAN><SPAN CLASS="f15">(<A HREF="../core/Agent.html" title="class in sajas.core">Agent</A> a, jade.lang.acl.ACLMessage msg, <A HREF="../core/behaviours/DataStore.html" title="class in sajas.core.behaviours">DataStore</A> store)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Construct an <code>IteratedAchieveREInitiator</code> with a given DataStore</DIV></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<A NAME="method_summary"></A><TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR BGCOLOR="#CCCCFF">
<TD COLSPAN="3" WIDTH="87.3%"><SPAN CLASS="f8">Method Summary</SPAN></TD>
</TR>
<TR>
<TD WIDTH="1%" ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">protected sajas.proto.Initiator.ProtocolSession</SPAN></DIV></TD>
<TD COLSPAN="2" WIDTH="86.3%" VALIGN="top"><SPAN CLASS="f17"><A HREF="#getSession(jade.lang.acl.ACLMessage, int)">getSession</A></SPAN><SPAN CLASS="f15">(jade.lang.acl.ACLMessage msg, int sessionIndex)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return a ProtocolSession object to manage replies to a given initiation message</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">protected void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#handleAllResultNotifications(java.util.Vector)">handleAllResultNotifications</A></SPAN><SPAN CLASS="f15">(Vector resultNotifications)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is redefined to call the proper overloaded method</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">protected void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#handleAllResultNotifications(java.util.Vector, java.util.Vector)">handleAllResultNotifications</A></SPAN><SPAN CLASS="f15">(Vector resultNotifications, Vector nextRequests)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is called when all the result notification messages of the current round have been collected.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">protected void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#handleInform(jade.lang.acl.ACLMessage)">handleInform</A></SPAN><SPAN CLASS="f15">(jade.lang.acl.ACLMessage inform)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is redefined to call the proper overloaded method</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">protected void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#handleInform(jade.lang.acl.ACLMessage, java.util.Vector)">handleInform</A></SPAN><SPAN CLASS="f15">(jade.lang.acl.ACLMessage inform, Vector nextRequests)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is called every time an <code>inform</code> message is received, which is not out-of-sequence according to the protocol rules.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">protected void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#initializeDataStore(jade.lang.acl.ACLMessage)">initializeDataStore</A></SPAN><SPAN CLASS="f15">(jade.lang.acl.ACLMessage msg)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Initialize the data store.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">static&nbsp;boolean</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#isSessionTerminated(jade.lang.acl.ACLMessage)">isSessionTerminated</A></SPAN><SPAN CLASS="f15">(jade.lang.acl.ACLMessage inform)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Check if the responder has closed the session just after sending this <code>inform</code> message.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">protected void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#prepareForNextRound()">prepareForNextRound</A></SPAN><SPAN CLASS="f15">()</SPAN></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#registerHandleAllResultNotifications(sajas.core.behaviours.Behaviour)">registerHandleAllResultNotifications</A></SPAN><SPAN CLASS="f15">(<A HREF="../core/behaviours/Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A> b)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method allows to register a user defined <code>Behaviour</code> in the HANDLE_ALL_RESULT_NOTIFICATIONS state.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#registerHandleInform(sajas.core.behaviours.Behaviour)">registerHandleInform</A></SPAN><SPAN CLASS="f15">(<A HREF="../core/behaviours/Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A> b)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method allows to register a user defined <code>Behaviour</code> in the HANDLE_REFUSE state.</DIV></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc1"><SPAN CLASS="f7">Methods inherited from class sajas.proto.<A HREF="AchieveREInitiator.html" title="class in sajas.proto">AchieveREInitiator</A></SPAN></TD>
</TR>
<TR>
<TD><SPAN CLASS="f15"><A HREF="AchieveREInitiator.html#adjustReplyTemplate(jade.lang.acl.ACLMessage)">adjustReplyTemplate</A>, <A HREF="AchieveREInitiator.html#checkInSequence(jade.lang.acl.ACLMessage)">checkInSequence</A>, <A HREF="AchieveREInitiator.html#checkSessions(jade.lang.acl.ACLMessage)">checkSessions</A>, <A HREF="AchieveREInitiator.html#createConvId(java.util.Vector)">createConvId</A>, <A HREF="AchieveREInitiator.html#getToBeReset()">getToBeReset</A>, <A HREF="AchieveREInitiator.html#handleAgree(jade.lang.acl.ACLMessage)">handleAgree</A>, <A HREF="AchieveREInitiator.html#handleAllResponses(java.util.Vector)">handleAllResponses</A>, <A HREF="AchieveREInitiator.html#handleFailure(jade.lang.acl.ACLMessage)">handleFailure</A>, <A HREF="AchieveREInitiator.html#handleNotUnderstood(jade.lang.acl.ACLMessage)">handleNotUnderstood</A>, <A HREF="AchieveREInitiator.html#handleOutOfSequence(jade.lang.acl.ACLMessage)">handleOutOfSequence</A>, <A HREF="AchieveREInitiator.html#handleRefuse(jade.lang.acl.ACLMessage)">handleRefuse</A>, <A HREF="AchieveREInitiator.html#onStart()">onStart</A>, <A HREF="AchieveREInitiator.html#prepareInitiations(jade.lang.acl.ACLMessage)">prepareInitiations</A>, <A HREF="AchieveREInitiator.html#prepareRequests(jade.lang.acl.ACLMessage)">prepareRequests</A>, <A HREF="AchieveREInitiator.html#registerHandleAgree(sajas.core.behaviours.Behaviour)">registerHandleAgree</A>, <A HREF="AchieveREInitiator.html#registerHandleAllResponses(sajas.core.behaviours.Behaviour)">registerHandleAllResponses</A>, <A HREF="AchieveREInitiator.html#registerHandleFailure(sajas.core.behaviours.Behaviour)">registerHandleFailure</A>, <A HREF="AchieveREInitiator.html#registerHandleNotUnderstood(sajas.core.behaviours.Behaviour)">registerHandleNotUnderstood</A>, <A HREF="AchieveREInitiator.html#registerHandleOutOfSequence(sajas.core.behaviours.Behaviour)">registerHandleOutOfSequence</A>, <A HREF="AchieveREInitiator.html#registerHandleRefuse(sajas.core.behaviours.Behaviour)">registerHandleRefuse</A>, <A HREF="AchieveREInitiator.html#registerPrepareInitiations(sajas.core.behaviours.Behaviour)">registerPrepareInitiations</A>, <A HREF="AchieveREInitiator.html#registerPrepareRequests(sajas.core.behaviours.Behaviour)">registerPrepareRequests</A>, <A HREF="AchieveREInitiator.html#reinit()">reinit</A>, <A HREF="AchieveREInitiator.html#reset()">reset</A>, <A HREF="AchieveREInitiator.html#reset(jade.lang.acl.ACLMessage)">reset</A>, <A HREF="AchieveREInitiator.html#sendInitiations(java.util.Vector)">sendInitiations</A>, <A HREF="AchieveREInitiator.html#setDataStore(sajas.core.behaviours.DataStore)">setDataStore</A></SPAN></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc1"><SPAN CLASS="f7">Methods inherited from class sajas.core.behaviours.<A HREF="../core/behaviours/FSMBehaviour.html" title="class in sajas.core.behaviours">FSMBehaviour</A></SPAN></TD>
</TR>
<TR>
<TD><SPAN CLASS="f15"><A HREF="../core/behaviours/FSMBehaviour.html#checkTermination(boolean, int)">checkTermination</A>, <A HREF="../core/behaviours/FSMBehaviour.html#deregisterDefaultTransition(java.lang.String)">deregisterDefaultTransition</A>, <A HREF="../core/behaviours/FSMBehaviour.html#deregisterState(java.lang.String)">deregisterState</A>, <A HREF="../core/behaviours/FSMBehaviour.html#deregisterTransition(java.lang.String, int)">deregisterTransition</A>, <A HREF="../core/behaviours/FSMBehaviour.html#forceTransitionTo(java.lang.String)">forceTransitionTo</A>, <A HREF="../core/behaviours/FSMBehaviour.html#getChildren()">getChildren</A>, <A HREF="../core/behaviours/FSMBehaviour.html#getCurrent()">getCurrent</A>, <A HREF="../core/behaviours/FSMBehaviour.html#getLastExitValue()">getLastExitValue</A>, <A HREF="../core/behaviours/FSMBehaviour.html#getName(sajas.core.behaviours.Behaviour)">getName</A>, <A HREF="../core/behaviours/FSMBehaviour.html#getPrevious()">getPrevious</A>, <A HREF="../core/behaviours/FSMBehaviour.html#getState(java.lang.String)">getState</A>, <A HREF="../core/behaviours/FSMBehaviour.html#handleInconsistentFSM(java.lang.String, int)">handleInconsistentFSM</A>, <A HREF="../core/behaviours/FSMBehaviour.html#handleStateEntered(sajas.core.behaviours.Behaviour)">handleStateEntered</A>, <A HREF="../core/behaviours/FSMBehaviour.html#hasDefaultTransition(java.lang.String)">hasDefaultTransition</A>, <A HREF="../core/behaviours/FSMBehaviour.html#onEnd()">onEnd</A>, <A HREF="../core/behaviours/FSMBehaviour.html#registerDefaultTransition(java.lang.String, java.lang.String)">registerDefaultTransition</A>, <A HREF="../core/behaviours/FSMBehaviour.html#registerDefaultTransition(java.lang.String, java.lang.String, java.lang.String)">registerDefaultTransition</A>, <A HREF="../core/behaviours/FSMBehaviour.html#registerFirstState(sajas.core.behaviours.Behaviour, java.lang.String)">registerFirstState</A>, <A HREF="../core/behaviours/FSMBehaviour.html#registerLastState(sajas.core.behaviours.Behaviour, java.lang.String)">registerLastState</A>, <A HREF="../core/behaviours/FSMBehaviour.html#registerState(sajas.core.behaviours.Behaviour, java.lang.String)">registerState</A>, <A HREF="../core/behaviours/FSMBehaviour.html#registerTransition(java.lang.String, java.lang.String, int)">registerTransition</A>, <A HREF="../core/behaviours/FSMBehaviour.html#registerTransition(java.lang.String, java.lang.String, int, java.lang.String)">registerTransition</A>, <A HREF="../core/behaviours/FSMBehaviour.html#resetStates(java.lang.String)">resetStates</A>, <A HREF="../core/behaviours/FSMBehaviour.html#scheduleFirst()">scheduleFirst</A>, <A HREF="../core/behaviours/FSMBehaviour.html#scheduleNext(boolean, int)">scheduleNext</A>, <A HREF="../core/behaviours/FSMBehaviour.html#stringifyTransitionTable()">stringifyTransitionTable</A></SPAN></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc1"><SPAN CLASS="f7">Methods inherited from class sajas.core.behaviours.<A HREF="../core/behaviours/SerialBehaviour.html" title="class in sajas.core.behaviours">SerialBehaviour</A></SPAN></TD>
</TR>
<TR>
<TD><SPAN CLASS="f15"><A HREF="../core/behaviours/SerialBehaviour.html#handle(sajas.core.behaviours.Behaviour.RunnableChangedEvent)">handle</A></SPAN></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc1"><SPAN CLASS="f7">Methods inherited from class sajas.core.behaviours.<A HREF="../core/behaviours/CompositeBehaviour.html" title="class in sajas.core.behaviours">CompositeBehaviour</A></SPAN></TD>
</TR>
<TR>
<TD><SPAN CLASS="f15"><A HREF="../core/behaviours/CompositeBehaviour.html#action()">action</A>, <A HREF="../core/behaviours/CompositeBehaviour.html#done()">done</A>, <A HREF="../core/behaviours/CompositeBehaviour.html#handleBlockEvent()">handleBlockEvent</A>, <A HREF="../core/behaviours/CompositeBehaviour.html#handleRestartEvent()">handleRestartEvent</A>, <A HREF="../core/behaviours/CompositeBehaviour.html#registerAsChild(sajas.core.behaviours.Behaviour)">registerAsChild</A>, <A HREF="../core/behaviours/CompositeBehaviour.html#resetChildren()">resetChildren</A>, <A HREF="../core/behaviours/CompositeBehaviour.html#setAgent(sajas.core.Agent)">setAgent</A></SPAN></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc1"><SPAN CLASS="f7">Methods inherited from class sajas.core.behaviours.<A HREF="../core/behaviours/Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></TD>
</TR>
<TR>
<TD><SPAN CLASS="f15"><A HREF="../core/behaviours/Behaviour.html#actionWrapper()">actionWrapper</A>, <A HREF="../core/behaviours/Behaviour.html#block()">block</A>, <A HREF="../core/behaviours/Behaviour.html#block(long)">block</A>, <A HREF="../core/behaviours/Behaviour.html#getAgent()">getAgent</A>, <A HREF="../core/behaviours/Behaviour.html#getBehaviourName()">getBehaviourName</A>, <A HREF="../core/behaviours/Behaviour.html#getDataStore()">getDataStore</A>, <A HREF="../core/behaviours/Behaviour.html#getExecutionState()">getExecutionState</A>, <A HREF="../core/behaviours/Behaviour.html#getParent()">getParent</A>, <A HREF="../core/behaviours/Behaviour.html#getRestartCounter()">getRestartCounter</A>, <A HREF="../core/behaviours/Behaviour.html#isRunnable()">isRunnable</A>, <A HREF="../core/behaviours/Behaviour.html#restart()">restart</A>, <A HREF="../core/behaviours/Behaviour.html#root()">root</A>, <A HREF="../core/behaviours/Behaviour.html#setBehaviourName(java.lang.String)">setBehaviourName</A>, <A HREF="../core/behaviours/Behaviour.html#setExecutionState(java.lang.String)">setExecutionState</A></SPAN></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc1"><SPAN CLASS="f7">Methods inherited from class java.lang.Object</SPAN></TD>
</TR>
<TR>
<TD><SPAN CLASS="f15">clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</SPAN></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<A NAME="field_detail"></A><TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc3"><SPAN CLASS="f8">Field Detail</SPAN></TD>
</TR>
</TABLE></DIV>
<A NAME="ALL_NEXT_REQUESTS_KEY"></A><DIV CLASS="p21"><SPAN CLASS="f19">ALL_NEXT_REQUESTS_KEY</SPAN></DIV><DIV CLASS="p23"><SPAN CLASS="f15">public final String </SPAN><SPAN CLASS="f17">ALL_NEXT_REQUESTS_KEY</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>Key to retrieve from the DataStore of the behaviour the vector of
	 ACLMessage objects that will be sent at next round.</DIV></DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="REINIT"></A><DIV CLASS="p21"><SPAN CLASS="f19">REINIT</SPAN></DIV><DIV CLASS="p23"><SPAN CLASS="f15">public static final String </SPAN><SPAN CLASS="f17">REINIT</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f7">See Also:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><A HREF="../../constant-values.html#sajas.proto.IteratedAchieveREInitiator.REINIT">Constant Field Values</A></DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2">
<A NAME="constructor_detail"></A><TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc3"><SPAN CLASS="f8">Constructor Detail</SPAN></TD>
</TR>
</TABLE></DIV>
<A NAME="IteratedAchieveREInitiator(sajas.core.Agent, jade.lang.acl.ACLMessage)"></A><DIV CLASS="p21"><SPAN CLASS="f19">IteratedAchieveREInitiator</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">public&nbsp;</SPAN><SPAN CLASS="f17">IteratedAchieveREInitiator</SPAN><SPAN CLASS="f15">(<A HREF="../core/Agent.html" title="class in sajas.core">Agent</A>&nbsp;a,</SPAN><BR><SPAN CLASS="f15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jade.lang.acl.ACLMessage&nbsp;msg)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>Construct an <code>IteratedAchieveREInitiator</code> with an empty DataStore</DIV></DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="IteratedAchieveREInitiator(sajas.core.Agent, jade.lang.acl.ACLMessage, sajas.core.behaviours.DataStore)"></A><DIV CLASS="p21"><SPAN CLASS="f19">IteratedAchieveREInitiator</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">public&nbsp;</SPAN><SPAN CLASS="f17">IteratedAchieveREInitiator</SPAN><SPAN CLASS="f15">(<A HREF="../core/Agent.html" title="class in sajas.core">Agent</A>&nbsp;a,</SPAN><BR><SPAN CLASS="f15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jade.lang.acl.ACLMessage&nbsp;msg,</SPAN><BR><SPAN CLASS="f15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="../core/behaviours/DataStore.html" title="class in sajas.core.behaviours">DataStore</A>&nbsp;store)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>Construct an <code>IteratedAchieveREInitiator</code> with a given DataStore</DIV><DIV CLASS="p15"><SPAN CLASS="f7">Parameters:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">a</SPAN> - The agent performing the protocol</DIV></DD></DL>
<DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">msg</SPAN> - The message that must be used to initiate the protocol.
	 Notice that the default implementation of the 
	 <code>prepareRequest()</code> method returns an array composed of 
	 only this message. The values of the slot 
	 <code>reply-with</code> is ignored and a different value is assigned
	 automatically by this class for each receiver.</DIV></DD></DL>
<DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">store</SPAN> - The <code>DataStore</code> that will be used by this 
	 <code>AchieveREInitiator</code></DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2">
<A NAME="method_detail"></A><TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc3"><SPAN CLASS="f8">Method Detail</SPAN></TD>
</TR>
</TABLE></DIV>
<A NAME="prepareForNextRound()"></A><DIV CLASS="p21"><SPAN CLASS="f19">prepareForNextRound</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">protected&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">prepareForNextRound</SPAN><SPAN CLASS="f15">()</SPAN></DIV><DIV CLASS="p2"><HR></DIV>
<A NAME="initializeDataStore(jade.lang.acl.ACLMessage)"></A><DIV CLASS="p21"><SPAN CLASS="f19">initializeDataStore</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">protected&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">initializeDataStore</SPAN><SPAN CLASS="f15">(jade.lang.acl.ACLMessage&nbsp;msg)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f7">Description copied from class: </SPAN><SPAN CLASS="f17"><A HREF="AchieveREInitiator.html" title="class in sajas.proto">AchieveREInitiator</A></SPAN></DIV><DIV>Initialize the data store.</DIV><DIV CLASS="p15"><SPAN CLASS="f7">Overrides:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15"><A HREF="AchieveREInitiator.html#initializeDataStore(jade.lang.acl.ACLMessage)">initializeDataStore</A></SPAN> in class <SPAN CLASS="f15"><A HREF="AchieveREInitiator.html" title="class in sajas.proto">AchieveREInitiator</A></SPAN></DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="getSession(jade.lang.acl.ACLMessage, int)"></A><DIV CLASS="p21"><SPAN CLASS="f19">getSession</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">protected&nbsp;sajas.proto.Initiator.ProtocolSession&nbsp;</SPAN><SPAN CLASS="f17">getSession</SPAN><SPAN CLASS="f15">(jade.lang.acl.ACLMessage&nbsp;msg,</SPAN><BR><SPAN CLASS="f15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;sessionIndex)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>Return a ProtocolSession object to manage replies to a given 
	 initiation message</DIV><DIV CLASS="p15"><SPAN CLASS="f7">Overrides:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15"><A HREF="AchieveREInitiator.html#getSession(jade.lang.acl.ACLMessage, int)">getSession</A></SPAN> in class <SPAN CLASS="f15"><A HREF="AchieveREInitiator.html" title="class in sajas.proto">AchieveREInitiator</A></SPAN></DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="handleInform(jade.lang.acl.ACLMessage, java.util.Vector)"></A><DIV CLASS="p21"><SPAN CLASS="f19">handleInform</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">protected&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">handleInform</SPAN><SPAN CLASS="f15">(jade.lang.acl.ACLMessage&nbsp;inform,</SPAN><BR><SPAN CLASS="f15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Vector&nbsp;nextRequests)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>This method is called every time an <code>inform</code>
	 message is received, which is not out-of-sequence according
	 to the protocol rules.
	 This default implementation does nothing; programmers might
	 wish to override this method in case they need to react to this event.</DIV><DIV CLASS="p15"><SPAN CLASS="f7">Parameters:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">inform</SPAN> - the received inform message</DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="handleInform(jade.lang.acl.ACLMessage)"></A><DIV CLASS="p21"><SPAN CLASS="f19">handleInform</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">protected&nbsp;final&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">handleInform</SPAN><SPAN CLASS="f15">(jade.lang.acl.ACLMessage&nbsp;inform)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>This method is redefined to call the proper overloaded method</DIV><DIV CLASS="p15"><SPAN CLASS="f7">Overrides:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15"><A HREF="AchieveREInitiator.html#handleInform(jade.lang.acl.ACLMessage)">handleInform</A></SPAN> in class <SPAN CLASS="f15"><A HREF="AchieveREInitiator.html" title="class in sajas.proto">AchieveREInitiator</A></SPAN></DIV></DD></DL>
<DIV><SPAN CLASS="f7">Parameters:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">inform</SPAN> - the received inform message</DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="handleAllResultNotifications(java.util.Vector, java.util.Vector)"></A><DIV CLASS="p21"><SPAN CLASS="f19">handleAllResultNotifications</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">protected&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">handleAllResultNotifications</SPAN><SPAN CLASS="f15">(Vector&nbsp;resultNotifications,</SPAN><BR><SPAN CLASS="f15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Vector&nbsp;nextRequests)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>This method is called when all the result notification messages 
	 of the current round have been collected. 
	 By result notification message we intend here all the <code>inform, 
	 failure</code> received messages, which are not out-of-sequence 
	 according to the protocol rules.
	 This default implementation does nothing; programmers might
	 wish to override this method in case they need to react to this event
	 by analysing all the messages in just one call.</DIV></DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="handleAllResultNotifications(java.util.Vector)"></A><DIV CLASS="p21"><SPAN CLASS="f19">handleAllResultNotifications</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">protected&nbsp;final&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">handleAllResultNotifications</SPAN><SPAN CLASS="f15">(Vector&nbsp;resultNotifications)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>This method is redefined to call the proper overloaded method</DIV><DIV CLASS="p15"><SPAN CLASS="f7">Overrides:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15"><A HREF="AchieveREInitiator.html#handleAllResultNotifications(java.util.Vector)">handleAllResultNotifications</A></SPAN> in class <SPAN CLASS="f15"><A HREF="AchieveREInitiator.html" title="class in sajas.proto">AchieveREInitiator</A></SPAN></DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="registerHandleInform(sajas.core.behaviours.Behaviour)"></A><DIV CLASS="p21"><SPAN CLASS="f19">registerHandleInform</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">public&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">registerHandleInform</SPAN><SPAN CLASS="f15">(<A HREF="../core/behaviours/Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A>&nbsp;b)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>This method allows to register a user defined <code>Behaviour</code>
	 in the HANDLE_REFUSE state.
	 This behaviour would override the homonymous method.
	 This method also set the 
	 data store of the registered <code>Behaviour</code> to the
	 DataStore of this current behaviour.
	 The registered behaviour can retrieve the received <code>inform</code> 
	 ACLMessage object from the datastore at the <code>REPLY_KEY</code>
	 key and the Vector of ACLMessage objects to be sent at next round
	 at the <code>ALL_NEXT_REQUESTS_KEY</code>.</DIV><DIV CLASS="p15"><SPAN CLASS="f7">Overrides:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15"><A HREF="AchieveREInitiator.html#registerHandleInform(sajas.core.behaviours.Behaviour)">registerHandleInform</A></SPAN> in class <SPAN CLASS="f15"><A HREF="AchieveREInitiator.html" title="class in sajas.proto">AchieveREInitiator</A></SPAN></DIV></DD></DL>
<DIV><SPAN CLASS="f7">Parameters:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">b</SPAN> - the Behaviour that will handle this state</DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="registerHandleAllResultNotifications(sajas.core.behaviours.Behaviour)"></A><DIV CLASS="p21"><SPAN CLASS="f19">registerHandleAllResultNotifications</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">public&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">registerHandleAllResultNotifications</SPAN><SPAN CLASS="f15">(<A HREF="../core/behaviours/Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A>&nbsp;b)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>This method allows to register a user defined <code>Behaviour</code>
	 in the HANDLE_ALL_RESULT_NOTIFICATIONS state.
	 This behaviour would override the homonymous method.
	 This method also set the 
	 data store of the registered <code>Behaviour</code> to the
	 DataStore of this current behaviour.
	 The registered behaviour can retrieve
	 the Vector of ACLMessage objects, received as a result notification,
	 from the datastore at the <code>ALL_RESULT_NOTIFICATIONS_KEY</code>
	 key and the Vector of ACLMessage objects to be sent at next round
	 at the <code>ALL_NEXT_REQUESTS_KEY</code>.</DIV><DIV CLASS="p15"><SPAN CLASS="f7">Overrides:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15"><A HREF="AchieveREInitiator.html#registerHandleAllResultNotifications(sajas.core.behaviours.Behaviour)">registerHandleAllResultNotifications</A></SPAN> in class <SPAN CLASS="f15"><A HREF="AchieveREInitiator.html" title="class in sajas.proto">AchieveREInitiator</A></SPAN></DIV></DD></DL>
<DIV><SPAN CLASS="f7">Parameters:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">b</SPAN> - the Behaviour that will handle this state</DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="isSessionTerminated(jade.lang.acl.ACLMessage)"></A><DIV CLASS="p21"><SPAN CLASS="f19">isSessionTerminated</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">public&nbsp;static&nbsp;boolean&nbsp;</SPAN><SPAN CLASS="f17">isSessionTerminated</SPAN><SPAN CLASS="f15">(jade.lang.acl.ACLMessage&nbsp;inform)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>Check if the responder has closed the session just after sending this <code>inform</code> message.</DIV></DD></DL>
<DIV CLASS="p2"><HR></DIV>
<TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="0" BORDER="0">
<TR VALIGN="top">
<TD COLSPAN="2"><TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="1" BORDER="0">
<TR>
<TD COLSPAN="2" CLASS="tc1"><TABLE CELLSPACING="3" CELLPADDING="0" BORDER="0">
<TR>
<TD><A HREF="../../overview-summary.html"><SPAN CLASS="f3">Overview</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="package-summary.html"><SPAN CLASS="f3">Package</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD COLSPAN="2" CLASS="tc2"><SPAN CLASS="f1">&nbsp;</SPAN><SPAN CLASS="f2">Class</SPAN><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="package-tree.html"><SPAN CLASS="f3">Tree</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="../../deprecated-list.html"><SPAN CLASS="f3">Deprecated</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="../../index-all.html"><SPAN CLASS="f3">Index</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="../../help-doc.html"><SPAN CLASS="f3">Help</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD><A HREF="ContractNetResponder.html" CLASS="f5">PREV CLASS</A><SPAN CLASS="f4">&nbsp;&nbsp;&nbsp;</SPAN><A HREF="ProposeInitiator.html" CLASS="f5">NEXT CLASS</A></TD>
<TD><A HREF="../../index.html?sajas/proto/IteratedAchieveREInitiator.html" TARGET="_top" CLASS="f5">FRAMES</A><SPAN CLASS="f4">&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><A HREF="IteratedAchieveREInitiator.html" TARGET="_top" CLASS="f5">NO FRAMES</A><SPAN CLASS="f4">&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><A HREF="../../all-classes-summary.html" CLASS="f5">All Classes</A></TD>
</TR>
<TR>
<TD><SPAN CLASS="f4">SUMMARY:&nbsp;<A HREF="#a1">NESTED</A>&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></SPAN></TD>
<TD><SPAN CLASS="f4">DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></SPAN></TD>
</TR>
</TABLE>
</TD>
</TR>
</TABLE>
<HR>
<DIV><SPAN CLASS="f9">Java API documentation generated with <A HREF="http://www.filigris.com/products/docflex_javadoc/#docflex-doclet" TARGET="_blank">DocFlex/Doclet</A> 1.6.1 using <A HREF="http://www.filigris.com/products/docflex_javadoc/templates/JavadocPro/" TARGET="_blank">JavadocPro</A> template set.</SPAN></DIV><DIV CLASS="p5"><SPAN CLASS="f9"><A HREF="http://www.filigris.com/products/docflex_javadoc/#docflex-doclet" TARGET="_blank">DocFlex/Doclet</A> is both a multi-format Javadoc doclet and a free edition of <A HREF="http://www.filigris.com/products/docflex_javadoc/" TARGET="_blank">DocFlex/Javadoc</A>, which is a template-driven programming tool for rapid development of any Javadoc-based Java API documentation generators (i.e. doclets). If you need to customize your Javadoc without writing a full-blown doclet from scratch, <A HREF="http://www.filigris.com/products/docflex_javadoc/" TARGET="_blank">DocFlex/Javadoc</A> may be the only tool able to help you! Find out more at <A HREF="http://www.docflex.com/" TARGET="_blank">www.docflex.com</A></SPAN></DIV>
</BODY>
</HTML>