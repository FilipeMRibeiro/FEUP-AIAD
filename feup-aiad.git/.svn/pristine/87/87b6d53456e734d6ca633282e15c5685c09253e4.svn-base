<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/REC-html4/loose.dtd">
<HTML>
<HEAD>
<!-- Generated by DocFlex/Doclet 1.6.1 on Tue Sep 01 14:08:05 BST 2015 -->
<TITLE>SimpleAchieveREInitiator (SAJaS)</TITLE>
<SCRIPT type="text/javascript">
    window.onload = function() {
        if (location.href.indexOf('is-external=true') == -1)
            parent.document.title="SimpleAchieveREInitiator (SAJaS)";
    }
</SCRIPT>
<LINK REL="stylesheet" TYPE="text/css" HREF="../../stylesheet.css" TITLE="Style">
</HEAD>
<BODY>
<TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="0" BORDER="0">
<TR VALIGN="top">
<TD COLSPAN="2"><TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="1" BORDER="0">
<TR>
<TD COLSPAN="2" CLASS="tc1"><TABLE CELLSPACING="3" CELLPADDING="0" BORDER="0">
<TR>
<TD><A HREF="../../overview-summary.html"><SPAN CLASS="f3">Overview</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="package-summary.html"><SPAN CLASS="f3">Package</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD COLSPAN="2" CLASS="tc2"><SPAN CLASS="f1">&nbsp;</SPAN><SPAN CLASS="f2">Class</SPAN><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="package-tree.html"><SPAN CLASS="f3">Tree</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="../../deprecated-list.html"><SPAN CLASS="f3">Deprecated</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="../../index-all.html"><SPAN CLASS="f3">Index</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="../../help-doc.html"><SPAN CLASS="f3">Help</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD><A HREF="ProposeResponder.html" CLASS="f5">PREV CLASS</A><SPAN CLASS="f4">&nbsp;&nbsp;&nbsp;</SPAN><A HREF="SimpleAchieveREResponder.html" CLASS="f5">NEXT CLASS</A></TD>
<TD><A HREF="../../index.html?sajas/proto/SimpleAchieveREInitiator.html" TARGET="_top" CLASS="f5">FRAMES</A><SPAN CLASS="f4">&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><A HREF="SimpleAchieveREInitiator.html" TARGET="_top" CLASS="f5">NO FRAMES</A><SPAN CLASS="f4">&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><A HREF="../../all-classes-summary.html" CLASS="f5">All Classes</A></TD>
</TR>
<TR>
<TD><SPAN CLASS="f4">SUMMARY:&nbsp;<A HREF="#a1">NESTED</A>&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></SPAN></TD>
<TD><SPAN CLASS="f4">DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></SPAN></TD>
</TR>
</TABLE>
</TD>
</TR>
</TABLE>
<HR>
<DIV CLASS="p16"><SPAN CLASS="f16">sajas.proto</SPAN></DIV><DIV CLASS="p17"><SPAN CLASS="f8">Class SimpleAchieveREInitiator</SPAN></DIV><DIV CLASS="p18"><SPAN CLASS="f15">java.lang.Object</SPAN></DIV><DIV CLASS="p7"><SPAN CLASS="f15">&nbsp;&nbsp;<IMG SRC="../../resources/inherit.gif" WIDTH="15" HEIGHT="14"><A HREF="../core/behaviours/Behaviour.html">sajas.core.behaviours.Behaviour</A></SPAN></DIV><DIV CLASS="p7"><SPAN CLASS="f15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<IMG SRC="../../resources/inherit.gif" WIDTH="15" HEIGHT="14"><A HREF="../core/behaviours/SimpleBehaviour.html">sajas.core.behaviours.SimpleBehaviour</A></SPAN></DIV><DIV CLASS="p7"><SPAN CLASS="f15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<IMG SRC="../../resources/inherit.gif" WIDTH="15" HEIGHT="14"></SPAN><SPAN CLASS="f17">sajas.proto.SimpleAchieveREInitiator</SPAN></DIV><DIV CLASS="p14"><SPAN CLASS="f7">All Implemented Interfaces:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>jade.util.leap.Serializable, Serializable</DIV></DD></DL>
<DIV CLASS="p19"><HR></DIV>
<DIV CLASS="p15"><SPAN CLASS="f15">public class </SPAN><SPAN CLASS="f17">SimpleAchieveREInitiator</SPAN></DIV><DIV><SPAN CLASS="f15">extends <A HREF="../core/behaviours/SimpleBehaviour.html" title="class in sajas.core.behaviours">SimpleBehaviour</A></SPAN></DIV><DIV CLASS="p2">Note: this class has been re-implemented to redirect the use of the agent and behaviour classes to SAJaS versions.</DIV><DIV CLASS="p2"><SPAN CLASS="f7">Author:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>hlc</DIV></DD></DL>
<DIV><SPAN CLASS="f7">See Also:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">jade.proto.SimpleAchieveREInitiator</SPAN></DIV></DD></DL>
<DIV CLASS="p15"><HR></DIV>
<DIV CLASS="p2">
<A NAME="a1"></A><TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc1"><SPAN CLASS="f7">Nested classes/interfaces inherited from class sajas.core.behaviours.<A HREF="../core/behaviours/Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></TD>
</TR>
<TR>
<TD><SPAN CLASS="f15"><A HREF="../core/behaviours/Behaviour.RunnableChangedEvent.html">Behaviour.RunnableChangedEvent</A></SPAN></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<A NAME="field_summary"></A><TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR BGCOLOR="#CCCCFF">
<TD COLSPAN="3" WIDTH="87.3%"><SPAN CLASS="f8">Field Summary</SPAN></TD>
</TR>
<TR>
<TD WIDTH="1%" ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">String</SPAN></DIV></TD>
<TD COLSPAN="2" WIDTH="86.3%" VALIGN="top"><SPAN CLASS="f17"><A HREF="#ALL_RESPONSES_KEY">ALL_RESPONSES_KEY</A></SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key to retrive all the responses received.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">String</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#ALL_RESULT_NOTIFICATIONS_KEY">ALL_RESULT_NOTIFICATIONS_KEY</A></SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key to retrive the result notification received.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">String</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#REQUEST_KEY">REQUEST_KEY</A></SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key to retrive from the datastore the ACLMessage passed in the constructor</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">String</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#REQUEST_SENT_KEY">REQUEST_SENT_KEY</A></SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key to retrive from the datastore the ACLMessage that has been sent.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">String</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#SECOND_REPLY_KEY">SECOND_REPLY_KEY</A></SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key to retrive the second reply received.</DIV></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc1"><SPAN CLASS="f7">Fields inherited from class sajas.core.behaviours.<A HREF="../core/behaviours/Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></TD>
</TR>
<TR>
<TD><SPAN CLASS="f15"><A HREF="../core/behaviours/Behaviour.html#myAgent">myAgent</A>, <A HREF="../core/behaviours/Behaviour.html#myEvent">myEvent</A>, <A HREF="../core/behaviours/Behaviour.html#NOTIFY_DOWN">NOTIFY_DOWN</A>, <A HREF="../core/behaviours/Behaviour.html#NOTIFY_UP">NOTIFY_UP</A>, <A HREF="../core/behaviours/Behaviour.html#parent">parent</A>, <A HREF="../core/behaviours/Behaviour.html#STATE_BLOCKED">STATE_BLOCKED</A>, <A HREF="../core/behaviours/Behaviour.html#STATE_READY">STATE_READY</A>, <A HREF="../core/behaviours/Behaviour.html#STATE_RUNNING">STATE_RUNNING</A></SPAN></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<A NAME="constructor_summary"></A><TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR BGCOLOR="#CCCCFF">
<TD COLSPAN="3" WIDTH="87.3%"><SPAN CLASS="f8">Constructor Summary</SPAN></TD>
</TR>
<TR>
<TD COLSPAN="3" WIDTH="87.3%" VALIGN="top"><SPAN CLASS="f17"><A HREF="#SimpleAchieveREInitiator(sajas.core.Agent, jade.lang.acl.ACLMessage)">SimpleAchieveREInitiator</A></SPAN><SPAN CLASS="f15">(<A HREF="../core/Agent.html" title="class in sajas.core">Agent</A> a, jade.lang.acl.ACLMessage msg)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Construct for the class by creating a new empty DataStore</DIV></TD>
</TR>
<TR>
<TD COLSPAN="3" VALIGN="top"><SPAN CLASS="f17"><A HREF="#SimpleAchieveREInitiator(sajas.core.Agent, jade.lang.acl.ACLMessage, sajas.core.behaviours.DataStore)">SimpleAchieveREInitiator</A></SPAN><SPAN CLASS="f15">(<A HREF="../core/Agent.html" title="class in sajas.core">Agent</A> a, jade.lang.acl.ACLMessage msg, <A HREF="../core/behaviours/DataStore.html" title="class in sajas.core.behaviours">DataStore</A> store)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructs a <code>SimpleAchieveREInitiator</code> behaviour</DIV></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<A NAME="method_summary"></A><TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR BGCOLOR="#CCCCFF">
<TD COLSPAN="3" WIDTH="87.3%"><SPAN CLASS="f8">Method Summary</SPAN></TD>
</TR>
<TR>
<TD WIDTH="1%" ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">void</SPAN></DIV></TD>
<TD COLSPAN="2" WIDTH="86.3%" VALIGN="top"><SPAN CLASS="f17"><A HREF="#action()">action</A></SPAN><SPAN CLASS="f15">()</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Runs the behaviour.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">boolean</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#done()">done</A></SPAN><SPAN CLASS="f15">()</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Check if this behaviour is done.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">protected void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#handleAgree(jade.lang.acl.ACLMessage)">handleAgree</A></SPAN><SPAN CLASS="f15">(jade.lang.acl.ACLMessage msg)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is called every time an <code>agree</code> message is received, which is not out-of-sequence according to the protocol rules.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">protected void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#handleAllResponses(java.util.Vector)">handleAllResponses</A></SPAN><SPAN CLASS="f15">(Vector msgs)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is called when all the responses have been collected or when the timeout is expired.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">protected void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#handleAllResultNotifications(java.util.Vector)">handleAllResultNotifications</A></SPAN><SPAN CLASS="f15">(Vector msgs)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is called when all the result notification messages have been collected.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">protected void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#handleFailure(jade.lang.acl.ACLMessage)">handleFailure</A></SPAN><SPAN CLASS="f15">(jade.lang.acl.ACLMessage msg)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is called every time a <code>failure</code> message is received, which is not out-of-sequence according to the protocol rules.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">protected void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#handleInform(jade.lang.acl.ACLMessage)">handleInform</A></SPAN><SPAN CLASS="f15">(jade.lang.acl.ACLMessage msg)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is called every time a <code>inform</code> message is received, which is not out-of-sequence according to the protocol rules.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">protected void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#handleNotUnderstood(jade.lang.acl.ACLMessage)">handleNotUnderstood</A></SPAN><SPAN CLASS="f15">(jade.lang.acl.ACLMessage msg)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is called every time a <code>not-understood</code> message is received, which is not out-of-sequence according to the protocol rules.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">protected void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#handleOutOfSequence(jade.lang.acl.ACLMessage)">handleOutOfSequence</A></SPAN><SPAN CLASS="f15">(jade.lang.acl.ACLMessage msg)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is called every time a message is received, which is out-of-sequence according to the protocol rules.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">protected void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#handleRefuse(jade.lang.acl.ACLMessage)">handleRefuse</A></SPAN><SPAN CLASS="f15">(jade.lang.acl.ACLMessage msg)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is called every time a <code>refuse</code> message is received, which is not out-of-sequence according to the protocol rules.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#onStart()">onStart</A></SPAN><SPAN CLASS="f15">()</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is just an empty placeholders for subclasses.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">protected jade.lang.acl.ACLMessage</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#prepareRequest(jade.lang.acl.ACLMessage)">prepareRequest</A></SPAN><SPAN CLASS="f15">(jade.lang.acl.ACLMessage msg)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method must return the ACLMessage to be sent.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#reset()">reset</A></SPAN><SPAN CLASS="f15">()</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method resets this behaviour so that it restarts from the initial state of the protocol with a null message.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#reset(jade.lang.acl.ACLMessage)">reset</A></SPAN><SPAN CLASS="f15">(jade.lang.acl.ACLMessage msg)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method resets this behaviour so that it restarts the protocol with another request message.</DIV></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc1"><SPAN CLASS="f7">Methods inherited from class sajas.core.behaviours.<A HREF="../core/behaviours/Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></TD>
</TR>
<TR>
<TD><SPAN CLASS="f15"><A HREF="../core/behaviours/Behaviour.html#actionWrapper()">actionWrapper</A>, <A HREF="../core/behaviours/Behaviour.html#block()">block</A>, <A HREF="../core/behaviours/Behaviour.html#block(long)">block</A>, <A HREF="../core/behaviours/Behaviour.html#getAgent()">getAgent</A>, <A HREF="../core/behaviours/Behaviour.html#getBehaviourName()">getBehaviourName</A>, <A HREF="../core/behaviours/Behaviour.html#getDataStore()">getDataStore</A>, <A HREF="../core/behaviours/Behaviour.html#getExecutionState()">getExecutionState</A>, <A HREF="../core/behaviours/Behaviour.html#getParent()">getParent</A>, <A HREF="../core/behaviours/Behaviour.html#getRestartCounter()">getRestartCounter</A>, <A HREF="../core/behaviours/Behaviour.html#handle(sajas.core.behaviours.Behaviour.RunnableChangedEvent)">handle</A>, <A HREF="../core/behaviours/Behaviour.html#handleBlockEvent()">handleBlockEvent</A>, <A HREF="../core/behaviours/Behaviour.html#handleRestartEvent()">handleRestartEvent</A>, <A HREF="../core/behaviours/Behaviour.html#isRunnable()">isRunnable</A>, <A HREF="../core/behaviours/Behaviour.html#onEnd()">onEnd</A>, <A HREF="../core/behaviours/Behaviour.html#restart()">restart</A>, <A HREF="../core/behaviours/Behaviour.html#root()">root</A>, <A HREF="../core/behaviours/Behaviour.html#setAgent(sajas.core.Agent)">setAgent</A>, <A HREF="../core/behaviours/Behaviour.html#setBehaviourName(java.lang.String)">setBehaviourName</A>, <A HREF="../core/behaviours/Behaviour.html#setDataStore(sajas.core.behaviours.DataStore)">setDataStore</A>, <A HREF="../core/behaviours/Behaviour.html#setExecutionState(java.lang.String)">setExecutionState</A></SPAN></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc1"><SPAN CLASS="f7">Methods inherited from class java.lang.Object</SPAN></TD>
</TR>
<TR>
<TD><SPAN CLASS="f15">clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</SPAN></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<A NAME="field_detail"></A><TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc3"><SPAN CLASS="f8">Field Detail</SPAN></TD>
</TR>
</TABLE></DIV>
<A NAME="ALL_RESPONSES_KEY"></A><DIV CLASS="p21"><SPAN CLASS="f19">ALL_RESPONSES_KEY</SPAN></DIV><DIV CLASS="p23"><SPAN CLASS="f15">public final String </SPAN><SPAN CLASS="f17">ALL_RESPONSES_KEY</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>key to retrive all the responses received.</DIV></DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="ALL_RESULT_NOTIFICATIONS_KEY"></A><DIV CLASS="p21"><SPAN CLASS="f19">ALL_RESULT_NOTIFICATIONS_KEY</SPAN></DIV><DIV CLASS="p23"><SPAN CLASS="f15">public final String </SPAN><SPAN CLASS="f17">ALL_RESULT_NOTIFICATIONS_KEY</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>key to retrive the result notification received.</DIV></DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="REQUEST_KEY"></A><DIV CLASS="p21"><SPAN CLASS="f19">REQUEST_KEY</SPAN></DIV><DIV CLASS="p23"><SPAN CLASS="f15">public final String </SPAN><SPAN CLASS="f17">REQUEST_KEY</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>key to retrive from the datastore the ACLMessage passed in the constructor</DIV></DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="REQUEST_SENT_KEY"></A><DIV CLASS="p21"><SPAN CLASS="f19">REQUEST_SENT_KEY</SPAN></DIV><DIV CLASS="p23"><SPAN CLASS="f15">public final String </SPAN><SPAN CLASS="f17">REQUEST_SENT_KEY</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>key to retrive from the datastore the ACLMessage that has been sent.</DIV></DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="SECOND_REPLY_KEY"></A><DIV CLASS="p21"><SPAN CLASS="f19">SECOND_REPLY_KEY</SPAN></DIV><DIV CLASS="p23"><SPAN CLASS="f15">public final String </SPAN><SPAN CLASS="f17">SECOND_REPLY_KEY</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>key to retrive the second reply received.</DIV></DD></DL>
<DIV CLASS="p2">
<A NAME="constructor_detail"></A><TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc3"><SPAN CLASS="f8">Constructor Detail</SPAN></TD>
</TR>
</TABLE></DIV>
<A NAME="SimpleAchieveREInitiator(sajas.core.Agent, jade.lang.acl.ACLMessage)"></A><DIV CLASS="p21"><SPAN CLASS="f19">SimpleAchieveREInitiator</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">public&nbsp;</SPAN><SPAN CLASS="f17">SimpleAchieveREInitiator</SPAN><SPAN CLASS="f15">(<A HREF="../core/Agent.html" title="class in sajas.core">Agent</A>&nbsp;a,</SPAN><BR><SPAN CLASS="f15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jade.lang.acl.ACLMessage&nbsp;msg)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>Construct for the class by creating a new empty DataStore</DIV><DIV CLASS="p15"><SPAN CLASS="f7">See Also:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15"><A HREF="#SimpleAchieveREInitiator(sajas.core.Agent, jade.lang.acl.ACLMessage, sajas.core.behaviours.DataStore)">SimpleAchieveREInitiator(Agent, ACLMessage, DataStore)</A></SPAN></DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="SimpleAchieveREInitiator(sajas.core.Agent, jade.lang.acl.ACLMessage, sajas.core.behaviours.DataStore)"></A><DIV CLASS="p21"><SPAN CLASS="f19">SimpleAchieveREInitiator</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">public&nbsp;</SPAN><SPAN CLASS="f17">SimpleAchieveREInitiator</SPAN><SPAN CLASS="f15">(<A HREF="../core/Agent.html" title="class in sajas.core">Agent</A>&nbsp;a,</SPAN><BR><SPAN CLASS="f15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jade.lang.acl.ACLMessage&nbsp;msg,</SPAN><BR><SPAN CLASS="f15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="../core/behaviours/DataStore.html" title="class in sajas.core.behaviours">DataStore</A>&nbsp;store)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>Constructs a <code>SimpleAchieveREInitiator</code> behaviour</DIV><DIV CLASS="p15"><SPAN CLASS="f7">Parameters:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">a</SPAN> - The agent performing the protocol</DIV></DD></DL>
<DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">msg</SPAN> - The message that must be used to initiate the protocol.
 Notice that in this simple implementation, the 
 <code>prepareMessage</code>
 method returns a single message.</DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2">
<A NAME="method_detail"></A><TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc3"><SPAN CLASS="f8">Method Detail</SPAN></TD>
</TR>
</TABLE></DIV>
<A NAME="action()"></A><DIV CLASS="p21"><SPAN CLASS="f19">action</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">public&nbsp;final&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">action</SPAN><SPAN CLASS="f15">()</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f7">Description copied from class: </SPAN><SPAN CLASS="f17"><A HREF="../core/behaviours/Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></DIV><DIV>Runs the behaviour. This abstract method must be implemented by
	 <code>Behaviour</code>subclasses to perform ordinary behaviour
	 duty. An agent schedules its behaviours calling their
	 <code>action()</code> method; since all the behaviours belonging
	 to the same agent are scheduled cooperatively, this method
	 <b>must not</b> enter in an endless loop and should return as
	 soon as possible to preserve agent responsiveness. To split a
	 long and slow task into smaller section, recursive behaviour
	 aggregation may be used.</DIV><DIV CLASS="p15"><SPAN CLASS="f7">Overrides:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15"><A HREF="../core/behaviours/Behaviour.html#action()">action</A></SPAN> in class <SPAN CLASS="f15"><A HREF="../core/behaviours/Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="onStart()"></A><DIV CLASS="p21"><SPAN CLASS="f19">onStart</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">public&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">onStart</SPAN><SPAN CLASS="f15">()</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f7">Description copied from class: </SPAN><SPAN CLASS="f17"><A HREF="../core/behaviours/Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></DIV><DIV>This method is just an empty placeholders for subclasses. It is
	 executed just once before starting behaviour execution. 
	 Therefore, it acts as a prolog to the task
	 represented by this <code>Behaviour</code>.</DIV><DIV CLASS="p15"><SPAN CLASS="f7">Overrides:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15"><A HREF="../core/behaviours/Behaviour.html#onStart()">onStart</A></SPAN> in class <SPAN CLASS="f15"><A HREF="../core/behaviours/Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="done()"></A><DIV CLASS="p21"><SPAN CLASS="f19">done</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">public&nbsp;boolean&nbsp;</SPAN><SPAN CLASS="f17">done</SPAN><SPAN CLASS="f15">()</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f7">Description copied from class: </SPAN><SPAN CLASS="f17"><A HREF="../core/behaviours/Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></DIV><DIV>Check if this behaviour is done. The agent scheduler calls this
	 method to see whether a <code>Behaviour</code> still need to be
	 run or it has completed its task. Concrete behaviours must
	 implement this method to return their completion state. Finished
	 behaviours are removed from the scheduling queue, while others
	 are kept within to be run again when their turn comes again.</DIV><DIV CLASS="p15"><SPAN CLASS="f7">Overrides:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15"><A HREF="../core/behaviours/Behaviour.html#done()">done</A></SPAN> in class <SPAN CLASS="f15"><A HREF="../core/behaviours/Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></DIV></DD></DL>
<DIV><SPAN CLASS="f7">Returns:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><code>true</code> if the behaviour has completely executed.</DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="prepareRequest(jade.lang.acl.ACLMessage)"></A><DIV CLASS="p21"><SPAN CLASS="f19">prepareRequest</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">protected&nbsp;jade.lang.acl.ACLMessage&nbsp;</SPAN><SPAN CLASS="f17">prepareRequest</SPAN><SPAN CLASS="f15">(jade.lang.acl.ACLMessage&nbsp;msg)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>This method must return the ACLMessage to be sent.
 This default implementation just return the ACLMessage object passed in the constructor.
 Programmer might override the method in order to return a different ACLMessage.
 Note that for this simple version of protocol, the message will be just send to the first receiver set.</DIV><DIV CLASS="p15"><SPAN CLASS="f7">Parameters:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">msg</SPAN> - the ACLMessage object passed in the constructor.</DIV></DD></DL>
<DIV><SPAN CLASS="f7">Returns:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>a ACLMessage.</DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="handleAgree(jade.lang.acl.ACLMessage)"></A><DIV CLASS="p21"><SPAN CLASS="f19">handleAgree</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">protected&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">handleAgree</SPAN><SPAN CLASS="f15">(jade.lang.acl.ACLMessage&nbsp;msg)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>This method is called every time an <code>agree</code>
 message is received, which is not out-of-sequence according
 to the protocol rules.
 This default implementation does nothing; programmers might
 wish to override the method in case they need to react to this event.</DIV></DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="handleRefuse(jade.lang.acl.ACLMessage)"></A><DIV CLASS="p21"><SPAN CLASS="f19">handleRefuse</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">protected&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">handleRefuse</SPAN><SPAN CLASS="f15">(jade.lang.acl.ACLMessage&nbsp;msg)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>This method is called every time a <code>refuse</code>
 message is received, which is not out-of-sequence according
 to the protocol rules.
 This default implementation does nothing; programmers might
 wish to override the method in case they need to react to this event.</DIV></DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="handleNotUnderstood(jade.lang.acl.ACLMessage)"></A><DIV CLASS="p21"><SPAN CLASS="f19">handleNotUnderstood</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">protected&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">handleNotUnderstood</SPAN><SPAN CLASS="f15">(jade.lang.acl.ACLMessage&nbsp;msg)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>This method is called every time a <code>not-understood</code>
 message is received, which is not out-of-sequence according
 to the protocol rules.
 This default implementation does nothing; programmers might
 wish to override the method in case they need to react to this event.</DIV></DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="handleInform(jade.lang.acl.ACLMessage)"></A><DIV CLASS="p21"><SPAN CLASS="f19">handleInform</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">protected&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">handleInform</SPAN><SPAN CLASS="f15">(jade.lang.acl.ACLMessage&nbsp;msg)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>This method is called every time a <code>inform</code>
 message is received, which is not out-of-sequence according
 to the protocol rules.
 This default implementation does nothing; programmers might
 wish to override the method in case they need to react to this event.</DIV></DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="handleFailure(jade.lang.acl.ACLMessage)"></A><DIV CLASS="p21"><SPAN CLASS="f19">handleFailure</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">protected&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">handleFailure</SPAN><SPAN CLASS="f15">(jade.lang.acl.ACLMessage&nbsp;msg)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>This method is called every time a <code>failure</code>
 message is received, which is not out-of-sequence according
 to the protocol rules.
 This default implementation does nothing; programmers might
 wish to override the method in case they need to react to this event.</DIV></DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="handleOutOfSequence(jade.lang.acl.ACLMessage)"></A><DIV CLASS="p21"><SPAN CLASS="f19">handleOutOfSequence</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">protected&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">handleOutOfSequence</SPAN><SPAN CLASS="f15">(jade.lang.acl.ACLMessage&nbsp;msg)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>This method is called every time a 
 message is received, which is out-of-sequence according
 to the protocol rules.
 This default implementation does nothing; programmers might
 wish to override the method in case they need to react to this event.</DIV><DIV CLASS="p15"><SPAN CLASS="f7">Parameters:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">msg</SPAN> - the received message</DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="handleAllResponses(java.util.Vector)"></A><DIV CLASS="p21"><SPAN CLASS="f19">handleAllResponses</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">protected&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">handleAllResponses</SPAN><SPAN CLASS="f15">(Vector&nbsp;msgs)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>This method is called when all the responses have been
 collected or when the timeout is expired.
 By response message we intend here all the <code>agree, not-understood,
 refuse</code> received messages, which are not
 not out-of-sequence according
 to the protocol rules.
 This default implementation does nothing; programmers might
 wish to override the method in case they need to react to this event
 by analysing all the messages in just one call.</DIV></DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="handleAllResultNotifications(java.util.Vector)"></A><DIV CLASS="p21"><SPAN CLASS="f19">handleAllResultNotifications</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">protected&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">handleAllResultNotifications</SPAN><SPAN CLASS="f15">(Vector&nbsp;msgs)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>This method is called when all the result notification messages 
 have been collected. 
 By result notification message we intend here all the <code>inform, 
 failure</code> received messages, which are not
 not out-of-sequence according to the protocol rules.
 This default implementation does nothing; programmers might
 wish to override the method in case they need to react to this event
 by analysing all the messages in just one call.</DIV></DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="reset()"></A><DIV CLASS="p21"><SPAN CLASS="f19">reset</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">public&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">reset</SPAN><SPAN CLASS="f15">()</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>This method resets this behaviour so that it restarts from the initial 
       state of the protocol with a null message.</DIV><DIV CLASS="p15"><SPAN CLASS="f7">Overrides:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15"><A HREF="../core/behaviours/SimpleBehaviour.html#reset()">reset</A></SPAN> in class <SPAN CLASS="f15"><A HREF="../core/behaviours/SimpleBehaviour.html" title="class in sajas.core.behaviours">SimpleBehaviour</A></SPAN></DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="reset(jade.lang.acl.ACLMessage)"></A><DIV CLASS="p21"><SPAN CLASS="f19">reset</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">public&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">reset</SPAN><SPAN CLASS="f15">(jade.lang.acl.ACLMessage&nbsp;msg)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>This method resets this behaviour so that it restarts the protocol with 
       another request message.</DIV><DIV CLASS="p15"><SPAN CLASS="f7">Parameters:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">msg</SPAN> - updates message to be sent.</DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="0" BORDER="0">
<TR VALIGN="top">
<TD COLSPAN="2"><TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="1" BORDER="0">
<TR>
<TD COLSPAN="2" CLASS="tc1"><TABLE CELLSPACING="3" CELLPADDING="0" BORDER="0">
<TR>
<TD><A HREF="../../overview-summary.html"><SPAN CLASS="f3">Overview</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="package-summary.html"><SPAN CLASS="f3">Package</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD COLSPAN="2" CLASS="tc2"><SPAN CLASS="f1">&nbsp;</SPAN><SPAN CLASS="f2">Class</SPAN><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="package-tree.html"><SPAN CLASS="f3">Tree</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="../../deprecated-list.html"><SPAN CLASS="f3">Deprecated</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="../../index-all.html"><SPAN CLASS="f3">Index</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="../../help-doc.html"><SPAN CLASS="f3">Help</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD><A HREF="ProposeResponder.html" CLASS="f5">PREV CLASS</A><SPAN CLASS="f4">&nbsp;&nbsp;&nbsp;</SPAN><A HREF="SimpleAchieveREResponder.html" CLASS="f5">NEXT CLASS</A></TD>
<TD><A HREF="../../index.html?sajas/proto/SimpleAchieveREInitiator.html" TARGET="_top" CLASS="f5">FRAMES</A><SPAN CLASS="f4">&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><A HREF="SimpleAchieveREInitiator.html" TARGET="_top" CLASS="f5">NO FRAMES</A><SPAN CLASS="f4">&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><A HREF="../../all-classes-summary.html" CLASS="f5">All Classes</A></TD>
</TR>
<TR>
<TD><SPAN CLASS="f4">SUMMARY:&nbsp;<A HREF="#a1">NESTED</A>&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></SPAN></TD>
<TD><SPAN CLASS="f4">DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></SPAN></TD>
</TR>
</TABLE>
</TD>
</TR>
</TABLE>
<HR>
<DIV><SPAN CLASS="f9">Java API documentation generated with <A HREF="http://www.filigris.com/products/docflex_javadoc/#docflex-doclet" TARGET="_blank">DocFlex/Doclet</A> 1.6.1 using <A HREF="http://www.filigris.com/products/docflex_javadoc/templates/JavadocPro/" TARGET="_blank">JavadocPro</A> template set.</SPAN></DIV><DIV CLASS="p5"><SPAN CLASS="f9"><A HREF="http://www.filigris.com/products/docflex_javadoc/#docflex-doclet" TARGET="_blank">DocFlex/Doclet</A> is both a multi-format Javadoc doclet and a free edition of <A HREF="http://www.filigris.com/products/docflex_javadoc/" TARGET="_blank">DocFlex/Javadoc</A>, which is a template-driven programming tool for rapid development of any Javadoc-based Java API documentation generators (i.e. doclets). If you need to customize your Javadoc without writing a full-blown doclet from scratch, <A HREF="http://www.filigris.com/products/docflex_javadoc/" TARGET="_blank">DocFlex/Javadoc</A> may be the only tool able to help you! Find out more at <A HREF="http://www.docflex.com/" TARGET="_blank">www.docflex.com</A></SPAN></DIV>
</BODY>
</HTML>