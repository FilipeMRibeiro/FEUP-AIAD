<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/REC-html4/loose.dtd">
<HTML>
<HEAD>
<!-- Generated by DocFlex/Doclet 1.6.1 on Tue Sep 01 14:08:06 BST 2015 -->
<TITLE>MsgReceiver (SAJaS)</TITLE>
<SCRIPT type="text/javascript">
    window.onload = function() {
        if (location.href.indexOf('is-external=true') == -1)
            parent.document.title="MsgReceiver (SAJaS)";
    }
</SCRIPT>
<LINK REL="stylesheet" TYPE="text/css" HREF="../../../stylesheet.css" TITLE="Style">
</HEAD>
<BODY>
<TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="0" BORDER="0">
<TR VALIGN="top">
<TD COLSPAN="2"><TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="1" BORDER="0">
<TR>
<TD COLSPAN="2" CLASS="tc1"><TABLE CELLSPACING="3" CELLPADDING="0" BORDER="0">
<TR>
<TD><A HREF="../../../overview-summary.html"><SPAN CLASS="f3">Overview</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="package-summary.html"><SPAN CLASS="f3">Package</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD COLSPAN="2" CLASS="tc2"><SPAN CLASS="f1">&nbsp;</SPAN><SPAN CLASS="f2">Class</SPAN><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="package-tree.html"><SPAN CLASS="f3">Tree</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="../../../deprecated-list.html"><SPAN CLASS="f3">Deprecated</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="../../../index-all.html"><SPAN CLASS="f3">Index</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="../../../help-doc.html"><SPAN CLASS="f3">Help</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD><A HREF="HandlerSelector.html" CLASS="f5">PREV CLASS</A><SPAN CLASS="f4">&nbsp;&nbsp;&nbsp;</SPAN><A HREF="ReplySender.html" CLASS="f5">NEXT CLASS</A></TD>
<TD><A HREF="../../../index.html?sajas/proto/states/MsgReceiver.html" TARGET="_top" CLASS="f5">FRAMES</A><SPAN CLASS="f4">&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><A HREF="MsgReceiver.html" TARGET="_top" CLASS="f5">NO FRAMES</A><SPAN CLASS="f4">&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><A HREF="../../../all-classes-summary.html" CLASS="f5">All Classes</A></TD>
</TR>
<TR>
<TD><SPAN CLASS="f4">SUMMARY:&nbsp;<A HREF="#a1">NESTED</A>&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></SPAN></TD>
<TD><SPAN CLASS="f4">DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></SPAN></TD>
</TR>
</TABLE>
</TD>
</TR>
</TABLE>
<HR>
<DIV CLASS="p16"><SPAN CLASS="f16">sajas.proto.states</SPAN></DIV><DIV CLASS="p17"><SPAN CLASS="f8">Class MsgReceiver</SPAN></DIV><DIV CLASS="p18"><SPAN CLASS="f15">java.lang.Object</SPAN></DIV><DIV CLASS="p7"><SPAN CLASS="f15">&nbsp;&nbsp;<IMG SRC="../../../resources/inherit.gif" WIDTH="15" HEIGHT="14"><A HREF="../../core/behaviours/Behaviour.html">sajas.core.behaviours.Behaviour</A></SPAN></DIV><DIV CLASS="p7"><SPAN CLASS="f15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<IMG SRC="../../../resources/inherit.gif" WIDTH="15" HEIGHT="14"><A HREF="../../core/behaviours/SimpleBehaviour.html">sajas.core.behaviours.SimpleBehaviour</A></SPAN></DIV><DIV CLASS="p7"><SPAN CLASS="f15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<IMG SRC="../../../resources/inherit.gif" WIDTH="15" HEIGHT="14"></SPAN><SPAN CLASS="f17">sajas.proto.states.MsgReceiver</SPAN></DIV><DIV CLASS="p14"><SPAN CLASS="f7">All Implemented Interfaces:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>jade.util.leap.Serializable, Serializable</DIV></DD></DL>
<DIV CLASS="p19"><HR></DIV>
<DIV CLASS="p15"><SPAN CLASS="f15">public class </SPAN><SPAN CLASS="f17">MsgReceiver</SPAN></DIV><DIV><SPAN CLASS="f15">extends <A HREF="../../core/behaviours/SimpleBehaviour.html" title="class in sajas.core.behaviours">SimpleBehaviour</A></SPAN></DIV><DIV CLASS="p2">Note: this class has been re-implemented to redirect the use of the agent and behaviour classes to SAJaS versions.</DIV><DIV CLASS="p2"><SPAN CLASS="f7">Author:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>hlc</DIV></DD></DL>
<DIV><SPAN CLASS="f7">See Also:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">jade.proto.states.MsgReceiver</SPAN></DIV></DD></DL>
<DIV CLASS="p15"><HR></DIV>
<DIV CLASS="p2">
<A NAME="a1"></A><TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc1"><SPAN CLASS="f7">Nested classes/interfaces inherited from class sajas.core.behaviours.<A HREF="../../core/behaviours/Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></TD>
</TR>
<TR>
<TD><SPAN CLASS="f15"><A HREF="../../core/behaviours/Behaviour.RunnableChangedEvent.html">Behaviour.RunnableChangedEvent</A></SPAN></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<A NAME="field_summary"></A><TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR BGCOLOR="#CCCCFF">
<TD COLSPAN="3" WIDTH="87.3%"><SPAN CLASS="f8">Field Summary</SPAN></TD>
</TR>
<TR>
<TD WIDTH="1%" ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">protected long</SPAN></DIV></TD>
<TD COLSPAN="2" WIDTH="86.3%" VALIGN="top"><SPAN CLASS="f17"><A HREF="#deadline">deadline</A></SPAN></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">static&nbsp;int</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#INFINITE">INFINITE</A></SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A numeric constant to mean that the deadline for the receive operation will never expire.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">static&nbsp;int</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#INTERRUPTED">INTERRUPTED</A></SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A numeric constant to mean that the receive operation was interrupted.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">protected Object</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#receivedMsgKey">receivedMsgKey</A></SPAN></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">protected jade.lang.acl.MessageTemplate</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#template">template</A></SPAN></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">static&nbsp;int</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#TIMEOUT_EXPIRED">TIMEOUT_EXPIRED</A></SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A numeric constant to mean that a timeout expired.</DIV></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc1"><SPAN CLASS="f7">Fields inherited from class sajas.core.behaviours.<A HREF="../../core/behaviours/Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></TD>
</TR>
<TR>
<TD><SPAN CLASS="f15"><A HREF="../../core/behaviours/Behaviour.html#myAgent">myAgent</A>, <A HREF="../../core/behaviours/Behaviour.html#myEvent">myEvent</A>, <A HREF="../../core/behaviours/Behaviour.html#NOTIFY_DOWN">NOTIFY_DOWN</A>, <A HREF="../../core/behaviours/Behaviour.html#NOTIFY_UP">NOTIFY_UP</A>, <A HREF="../../core/behaviours/Behaviour.html#parent">parent</A>, <A HREF="../../core/behaviours/Behaviour.html#STATE_BLOCKED">STATE_BLOCKED</A>, <A HREF="../../core/behaviours/Behaviour.html#STATE_READY">STATE_READY</A>, <A HREF="../../core/behaviours/Behaviour.html#STATE_RUNNING">STATE_RUNNING</A></SPAN></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<A NAME="constructor_summary"></A><TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR BGCOLOR="#CCCCFF">
<TD COLSPAN="3" WIDTH="87.3%"><SPAN CLASS="f8">Constructor Summary</SPAN></TD>
</TR>
<TR>
<TD WIDTH="1%" ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">protected</SPAN></DIV></TD>
<TD COLSPAN="2" WIDTH="86.3%" VALIGN="top"><SPAN CLASS="f17"><A HREF="#MsgReceiver()">MsgReceiver</A></SPAN><SPAN CLASS="f15">()</SPAN></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><TABLE BORDER="0"><TR><TD></TD></TR></TABLE></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#MsgReceiver(sajas.core.Agent, jade.lang.acl.MessageTemplate, long, sajas.core.behaviours.DataStore, java.lang.Object)">MsgReceiver</A></SPAN><SPAN CLASS="f15">(<A HREF="../../core/Agent.html" title="class in sajas.core">Agent</A> a, jade.lang.acl.MessageTemplate mt, long deadline, <A HREF="../../core/behaviours/DataStore.html" title="class in sajas.core.behaviours">DataStore</A> s, Object msgKey)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructor.</DIV></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<A NAME="method_summary"></A><TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR BGCOLOR="#CCCCFF">
<TD COLSPAN="3" WIDTH="87.3%"><SPAN CLASS="f8">Method Summary</SPAN></TD>
</TR>
<TR>
<TD WIDTH="1%" ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">void</SPAN></DIV></TD>
<TD COLSPAN="2" WIDTH="86.3%" VALIGN="top"><SPAN CLASS="f17"><A HREF="#action()">action</A></SPAN><SPAN CLASS="f15">()</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Runs the behaviour.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">boolean</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#done()">done</A></SPAN><SPAN CLASS="f15">()</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Check if this behaviour is done.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">protected void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#handleMessage(jade.lang.acl.ACLMessage)">handleMessage</A></SPAN><SPAN CLASS="f15">(jade.lang.acl.ACLMessage msg)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This is invoked when a message matching the specified template is received or the timeout has expired (the <code>msg</code> parameter is null in this case).</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#interrupt()">interrupt</A></SPAN><SPAN CLASS="f15">()</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Signal an interruption to this receiver, and cause the ongoing receive operation to abort.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">int</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#onEnd()">onEnd</A></SPAN><SPAN CLASS="f15">()</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is just an empty placeholder for subclasses.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#reset(jade.lang.acl.MessageTemplate, long, sajas.core.behaviours.DataStore, java.lang.Object)">reset</A></SPAN><SPAN CLASS="f15">(jade.lang.acl.MessageTemplate mt, long deadline, <A HREF="../../core/behaviours/DataStore.html" title="class in sajas.core.behaviours">DataStore</A> s, Object msgKey)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reset this behaviour, possibly replacing the receive templatt and other data.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#setDeadline(long)">setDeadline</A></SPAN><SPAN CLASS="f15">(long deadline)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method allows modifying the deadline</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#setReceivedKey(java.lang.Object)">setReceivedKey</A></SPAN><SPAN CLASS="f15">(Object key)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method allows modifying the key in the DS where to put the received message</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#setTemplate(jade.lang.acl.MessageTemplate)">setTemplate</A></SPAN><SPAN CLASS="f15">(jade.lang.acl.MessageTemplate mt)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method allows modifying the template</DIV></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc1"><SPAN CLASS="f7">Methods inherited from class sajas.core.behaviours.<A HREF="../../core/behaviours/SimpleBehaviour.html" title="class in sajas.core.behaviours">SimpleBehaviour</A></SPAN></TD>
</TR>
<TR>
<TD><SPAN CLASS="f15"><A HREF="../../core/behaviours/SimpleBehaviour.html#reset()">reset</A></SPAN></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc1"><SPAN CLASS="f7">Methods inherited from class sajas.core.behaviours.<A HREF="../../core/behaviours/Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></TD>
</TR>
<TR>
<TD><SPAN CLASS="f15"><A HREF="../../core/behaviours/Behaviour.html#actionWrapper()">actionWrapper</A>, <A HREF="../../core/behaviours/Behaviour.html#block()">block</A>, <A HREF="../../core/behaviours/Behaviour.html#block(long)">block</A>, <A HREF="../../core/behaviours/Behaviour.html#getAgent()">getAgent</A>, <A HREF="../../core/behaviours/Behaviour.html#getBehaviourName()">getBehaviourName</A>, <A HREF="../../core/behaviours/Behaviour.html#getDataStore()">getDataStore</A>, <A HREF="../../core/behaviours/Behaviour.html#getExecutionState()">getExecutionState</A>, <A HREF="../../core/behaviours/Behaviour.html#getParent()">getParent</A>, <A HREF="../../core/behaviours/Behaviour.html#getRestartCounter()">getRestartCounter</A>, <A HREF="../../core/behaviours/Behaviour.html#handle(sajas.core.behaviours.Behaviour.RunnableChangedEvent)">handle</A>, <A HREF="../../core/behaviours/Behaviour.html#handleBlockEvent()">handleBlockEvent</A>, <A HREF="../../core/behaviours/Behaviour.html#handleRestartEvent()">handleRestartEvent</A>, <A HREF="../../core/behaviours/Behaviour.html#isRunnable()">isRunnable</A>, <A HREF="../../core/behaviours/Behaviour.html#onStart()">onStart</A>, <A HREF="../../core/behaviours/Behaviour.html#restart()">restart</A>, <A HREF="../../core/behaviours/Behaviour.html#root()">root</A>, <A HREF="../../core/behaviours/Behaviour.html#setAgent(sajas.core.Agent)">setAgent</A>, <A HREF="../../core/behaviours/Behaviour.html#setBehaviourName(java.lang.String)">setBehaviourName</A>, <A HREF="../../core/behaviours/Behaviour.html#setDataStore(sajas.core.behaviours.DataStore)">setDataStore</A>, <A HREF="../../core/behaviours/Behaviour.html#setExecutionState(java.lang.String)">setExecutionState</A></SPAN></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc1"><SPAN CLASS="f7">Methods inherited from class java.lang.Object</SPAN></TD>
</TR>
<TR>
<TD><SPAN CLASS="f15">clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</SPAN></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<A NAME="field_detail"></A><TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc3"><SPAN CLASS="f8">Field Detail</SPAN></TD>
</TR>
</TABLE></DIV>
<A NAME="deadline"></A><DIV CLASS="p21"><SPAN CLASS="f19">deadline</SPAN></DIV><DIV CLASS="p23"><SPAN CLASS="f15">protected long </SPAN><SPAN CLASS="f17">deadline</SPAN></DIV><DIV CLASS="p2"><HR></DIV>
<A NAME="INFINITE"></A><DIV CLASS="p21"><SPAN CLASS="f19">INFINITE</SPAN></DIV><DIV CLASS="p23"><SPAN CLASS="f15">public static final int </SPAN><SPAN CLASS="f17">INFINITE</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>A numeric constant to mean that the deadline for the receive
       operation will never expire.</DIV><DIV CLASS="p15"><SPAN CLASS="f7">See Also:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><A HREF="../../../constant-values.html#sajas.proto.states.MsgReceiver.INFINITE">Constant Field Values</A></DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="INTERRUPTED"></A><DIV CLASS="p21"><SPAN CLASS="f19">INTERRUPTED</SPAN></DIV><DIV CLASS="p23"><SPAN CLASS="f15">public static final int </SPAN><SPAN CLASS="f17">INTERRUPTED</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>A numeric constant to mean that the receive operation was
       interrupted.</DIV><DIV CLASS="p15"><SPAN CLASS="f7">See Also:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><A HREF="../../../constant-values.html#sajas.proto.states.MsgReceiver.INTERRUPTED">Constant Field Values</A></DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="receivedMsgKey"></A><DIV CLASS="p21"><SPAN CLASS="f19">receivedMsgKey</SPAN></DIV><DIV CLASS="p23"><SPAN CLASS="f15">protected Object </SPAN><SPAN CLASS="f17">receivedMsgKey</SPAN></DIV><DIV CLASS="p2"><HR></DIV>
<A NAME="template"></A><DIV CLASS="p21"><SPAN CLASS="f19">template</SPAN></DIV><DIV CLASS="p23"><SPAN CLASS="f15">protected jade.lang.acl.MessageTemplate </SPAN><SPAN CLASS="f17">template</SPAN></DIV><DIV CLASS="p2"><HR></DIV>
<A NAME="TIMEOUT_EXPIRED"></A><DIV CLASS="p21"><SPAN CLASS="f19">TIMEOUT_EXPIRED</SPAN></DIV><DIV CLASS="p23"><SPAN CLASS="f15">public static final int </SPAN><SPAN CLASS="f17">TIMEOUT_EXPIRED</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>A numeric constant to mean that a timeout expired.</DIV><DIV CLASS="p15"><SPAN CLASS="f7">See Also:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><A HREF="../../../constant-values.html#sajas.proto.states.MsgReceiver.TIMEOUT_EXPIRED">Constant Field Values</A></DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2">
<A NAME="constructor_detail"></A><TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc3"><SPAN CLASS="f8">Constructor Detail</SPAN></TD>
</TR>
</TABLE></DIV>
<A NAME="MsgReceiver(sajas.core.Agent, jade.lang.acl.MessageTemplate, long, sajas.core.behaviours.DataStore, java.lang.Object)"></A><DIV CLASS="p21"><SPAN CLASS="f19">MsgReceiver</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">public&nbsp;</SPAN><SPAN CLASS="f17">MsgReceiver</SPAN><SPAN CLASS="f15">(<A HREF="../../core/Agent.html" title="class in sajas.core">Agent</A>&nbsp;a,</SPAN><BR><SPAN CLASS="f15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jade.lang.acl.MessageTemplate&nbsp;mt,</SPAN><BR><SPAN CLASS="f15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;long&nbsp;deadline,</SPAN><BR><SPAN CLASS="f15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="../../core/behaviours/DataStore.html" title="class in sajas.core.behaviours">DataStore</A>&nbsp;s,</SPAN><BR><SPAN CLASS="f15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Object&nbsp;msgKey)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>Constructor.</DIV><DIV CLASS="p15"><SPAN CLASS="f7">Parameters:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">a</SPAN> - a reference to the Agent</DIV></DD></DL>
<DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">mt</SPAN> - the MessageTemplate of the message to be received, if null
 the first received message is returned by this behaviour</DIV></DD></DL>
<DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">deadline</SPAN> - a timeout for waiting until a message arrives. It must
 be expressed as an absolute time, as it would be returned by
 <code>System.currentTimeMillisec()</code></DIV></DD></DL>
<DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">s</SPAN> - the dataStore for this bheaviour</DIV></DD></DL>
<DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">msgKey</SPAN> - the key where the beahviour must put the received
 message into the DataStore.</DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="MsgReceiver()"></A><DIV CLASS="p21"><SPAN CLASS="f19">MsgReceiver</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">protected&nbsp;</SPAN><SPAN CLASS="f17">MsgReceiver</SPAN><SPAN CLASS="f15">()</SPAN></DIV><DIV CLASS="p2">
<A NAME="method_detail"></A><TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc3"><SPAN CLASS="f8">Method Detail</SPAN></TD>
</TR>
</TABLE></DIV>
<A NAME="action()"></A><DIV CLASS="p21"><SPAN CLASS="f19">action</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">public&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">action</SPAN><SPAN CLASS="f15">()</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f7">Description copied from class: </SPAN><SPAN CLASS="f17"><A HREF="../../core/behaviours/Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></DIV><DIV>Runs the behaviour. This abstract method must be implemented by
	 <code>Behaviour</code>subclasses to perform ordinary behaviour
	 duty. An agent schedules its behaviours calling their
	 <code>action()</code> method; since all the behaviours belonging
	 to the same agent are scheduled cooperatively, this method
	 <b>must not</b> enter in an endless loop and should return as
	 soon as possible to preserve agent responsiveness. To split a
	 long and slow task into smaller section, recursive behaviour
	 aggregation may be used.</DIV><DIV CLASS="p15"><SPAN CLASS="f7">Overrides:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15"><A HREF="../../core/behaviours/Behaviour.html#action()">action</A></SPAN> in class <SPAN CLASS="f15"><A HREF="../../core/behaviours/Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="done()"></A><DIV CLASS="p21"><SPAN CLASS="f19">done</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">public&nbsp;boolean&nbsp;</SPAN><SPAN CLASS="f17">done</SPAN><SPAN CLASS="f15">()</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f7">Description copied from class: </SPAN><SPAN CLASS="f17"><A HREF="../../core/behaviours/Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></DIV><DIV>Check if this behaviour is done. The agent scheduler calls this
	 method to see whether a <code>Behaviour</code> still need to be
	 run or it has completed its task. Concrete behaviours must
	 implement this method to return their completion state. Finished
	 behaviours are removed from the scheduling queue, while others
	 are kept within to be run again when their turn comes again.</DIV><DIV CLASS="p15"><SPAN CLASS="f7">Overrides:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15"><A HREF="../../core/behaviours/Behaviour.html#done()">done</A></SPAN> in class <SPAN CLASS="f15"><A HREF="../../core/behaviours/Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></DIV></DD></DL>
<DIV><SPAN CLASS="f7">Returns:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><code>true</code> if the behaviour has completely executed.</DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="onEnd()"></A><DIV CLASS="p21"><SPAN CLASS="f19">onEnd</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">public&nbsp;int&nbsp;</SPAN><SPAN CLASS="f17">onEnd</SPAN><SPAN CLASS="f15">()</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f7">Description copied from class: </SPAN><SPAN CLASS="f17"><A HREF="../../core/behaviours/Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></DIV><DIV>This method is just an empty placeholder for subclasses. It is
	 invoked just once after this behaviour has ended. Therefore,
	 it acts as an epilog for the task represented by this
	 <code>Behaviour</code>.
	 <br>
	 Note that <code>onEnd</code> is called after the behaviour has been
	 removed from the pool of behaviours to be executed by an agent. 
	 Therefore calling
	 <code>reset()</code> is not sufficient to cyclically repeat the task
	 represented by this <code>Behaviour</code>. In order to achieve that, 
	 this <code>Behaviour</code> must be added again to the agent 
	 (using <code>myAgent.addBehaviour(this)</code>). The same applies to
	 in the case of a <code>Behaviour</code> that is a child of a 
	 <code>ParallelBehaviour</code>.</DIV><DIV CLASS="p15"><SPAN CLASS="f7">Overrides:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15"><A HREF="../../core/behaviours/Behaviour.html#onEnd()">onEnd</A></SPAN> in class <SPAN CLASS="f15"><A HREF="../../core/behaviours/Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></DIV></DD></DL>
<DIV><SPAN CLASS="f7">Returns:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>the performative if a message arrived,
 <code>TIMEOUT_EXPIRED</code> if the timeout expired or
 <code>INTERRUPTED</code> if this <code>MsgReceiver</code>
 was interrupted calling the <code>interrupt()</code> method.</DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="handleMessage(jade.lang.acl.ACLMessage)"></A><DIV CLASS="p21"><SPAN CLASS="f19">handleMessage</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">protected&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">handleMessage</SPAN><SPAN CLASS="f15">(jade.lang.acl.ACLMessage&nbsp;msg)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>This is invoked when a message matching the specified template 
	   is received or the timeout has expired (the <code>msg</code>
	   parameter is null in this case). Users may redefine this method 
	   to react to this event. The default implementation of does nothing.</DIV></DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="reset(jade.lang.acl.MessageTemplate, long, sajas.core.behaviours.DataStore, java.lang.Object)"></A><DIV CLASS="p21"><SPAN CLASS="f19">reset</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">public&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">reset</SPAN><SPAN CLASS="f15">(jade.lang.acl.MessageTemplate&nbsp;mt,</SPAN><BR><SPAN CLASS="f15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;long&nbsp;deadline,</SPAN><BR><SPAN CLASS="f15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="../../core/behaviours/DataStore.html" title="class in sajas.core.behaviours">DataStore</A>&nbsp;s,</SPAN><BR><SPAN CLASS="f15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Object&nbsp;msgKey)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>Reset this behaviour, possibly replacing the receive templatt
       and other data.</DIV><DIV CLASS="p15"><SPAN CLASS="f7">Parameters:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">mt</SPAN> - The template to match ACL messages against during the
       receive operation.</DIV></DD></DL>
<DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">deadline</SPAN> - The relative timeout of the receive
       operation. If the <code>INFINITE</code> constant is used, then
       no deadline is set and the operation will wait until a matching
       ACL message arrives.</DIV></DD></DL>
<DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">s</SPAN> - The datastore where the received ACL message is to be
       put.</DIV></DD></DL>
<DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">msgKey</SPAN> - The key to use to put the received message into
       the selected datastore.</DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="setDeadline(long)"></A><DIV CLASS="p21"><SPAN CLASS="f19">setDeadline</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">public&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">setDeadline</SPAN><SPAN CLASS="f15">(long&nbsp;deadline)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>This method allows modifying the deadline</DIV></DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="setTemplate(jade.lang.acl.MessageTemplate)"></A><DIV CLASS="p21"><SPAN CLASS="f19">setTemplate</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">public&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">setTemplate</SPAN><SPAN CLASS="f15">(jade.lang.acl.MessageTemplate&nbsp;mt)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>This method allows modifying the template</DIV></DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="setReceivedKey(java.lang.Object)"></A><DIV CLASS="p21"><SPAN CLASS="f19">setReceivedKey</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">public&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">setReceivedKey</SPAN><SPAN CLASS="f15">(Object&nbsp;key)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>This method allows modifying the key in the DS where to put the 
 received message</DIV></DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="interrupt()"></A><DIV CLASS="p21"><SPAN CLASS="f19">interrupt</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">public&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">interrupt</SPAN><SPAN CLASS="f15">()</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>Signal an interruption to this receiver, and cause the ongoing
       receive operation to abort.</DIV></DD></DL>
<DIV CLASS="p2"><HR></DIV>
<TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="0" BORDER="0">
<TR VALIGN="top">
<TD COLSPAN="2"><TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="1" BORDER="0">
<TR>
<TD COLSPAN="2" CLASS="tc1"><TABLE CELLSPACING="3" CELLPADDING="0" BORDER="0">
<TR>
<TD><A HREF="../../../overview-summary.html"><SPAN CLASS="f3">Overview</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="package-summary.html"><SPAN CLASS="f3">Package</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD COLSPAN="2" CLASS="tc2"><SPAN CLASS="f1">&nbsp;</SPAN><SPAN CLASS="f2">Class</SPAN><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="package-tree.html"><SPAN CLASS="f3">Tree</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="../../../deprecated-list.html"><SPAN CLASS="f3">Deprecated</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="../../../index-all.html"><SPAN CLASS="f3">Index</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="../../../help-doc.html"><SPAN CLASS="f3">Help</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD><A HREF="HandlerSelector.html" CLASS="f5">PREV CLASS</A><SPAN CLASS="f4">&nbsp;&nbsp;&nbsp;</SPAN><A HREF="ReplySender.html" CLASS="f5">NEXT CLASS</A></TD>
<TD><A HREF="../../../index.html?sajas/proto/states/MsgReceiver.html" TARGET="_top" CLASS="f5">FRAMES</A><SPAN CLASS="f4">&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><A HREF="MsgReceiver.html" TARGET="_top" CLASS="f5">NO FRAMES</A><SPAN CLASS="f4">&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><A HREF="../../../all-classes-summary.html" CLASS="f5">All Classes</A></TD>
</TR>
<TR>
<TD><SPAN CLASS="f4">SUMMARY:&nbsp;<A HREF="#a1">NESTED</A>&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></SPAN></TD>
<TD><SPAN CLASS="f4">DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></SPAN></TD>
</TR>
</TABLE>
</TD>
</TR>
</TABLE>
<HR>
<DIV><SPAN CLASS="f9">Java API documentation generated with <A HREF="http://www.filigris.com/products/docflex_javadoc/#docflex-doclet" TARGET="_blank">DocFlex/Doclet</A> 1.6.1 using <A HREF="http://www.filigris.com/products/docflex_javadoc/templates/JavadocPro/" TARGET="_blank">JavadocPro</A> template set.</SPAN></DIV><DIV CLASS="p5"><SPAN CLASS="f9"><A HREF="http://www.filigris.com/products/docflex_javadoc/#docflex-doclet" TARGET="_blank">DocFlex/Doclet</A> is both a multi-format Javadoc doclet and a free edition of <A HREF="http://www.filigris.com/products/docflex_javadoc/" TARGET="_blank">DocFlex/Javadoc</A>, which is a template-driven programming tool for rapid development of any Javadoc-based Java API documentation generators (i.e. doclets). If you need to customize your Javadoc without writing a full-blown doclet from scratch, <A HREF="http://www.filigris.com/products/docflex_javadoc/" TARGET="_blank">DocFlex/Javadoc</A> may be the only tool able to help you! Find out more at <A HREF="http://www.docflex.com/" TARGET="_blank">www.docflex.com</A></SPAN></DIV>
</BODY>
</HTML>