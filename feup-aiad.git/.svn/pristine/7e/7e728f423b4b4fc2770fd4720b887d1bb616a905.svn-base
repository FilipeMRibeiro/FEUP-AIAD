<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/REC-html4/loose.dtd">
<HTML>
<HEAD>
<!-- Generated by DocFlex/Doclet 1.6.1 on Tue Sep 01 14:08:05 BST 2015 -->
<TITLE>SSContractNetResponder (SAJaS)</TITLE>
<SCRIPT type="text/javascript">
    window.onload = function() {
        if (location.href.indexOf('is-external=true') == -1)
            parent.document.title="SSContractNetResponder (SAJaS)";
    }
</SCRIPT>
<LINK REL="stylesheet" TYPE="text/css" HREF="../../stylesheet.css" TITLE="Style">
</HEAD>
<BODY>
<TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="0" BORDER="0">
<TR VALIGN="top">
<TD COLSPAN="2"><TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="1" BORDER="0">
<TR>
<TD COLSPAN="2" CLASS="tc1"><TABLE CELLSPACING="3" CELLPADDING="0" BORDER="0">
<TR>
<TD><A HREF="../../overview-summary.html"><SPAN CLASS="f3">Overview</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="package-summary.html"><SPAN CLASS="f3">Package</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD COLSPAN="2" CLASS="tc2"><SPAN CLASS="f1">&nbsp;</SPAN><SPAN CLASS="f2">Class</SPAN><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="package-tree.html"><SPAN CLASS="f3">Tree</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="../../deprecated-list.html"><SPAN CLASS="f3">Deprecated</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="../../index-all.html"><SPAN CLASS="f3">Index</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="../../help-doc.html"><SPAN CLASS="f3">Help</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD><A HREF="SimpleAchieveREResponder.html" CLASS="f5">PREV CLASS</A><SPAN CLASS="f4">&nbsp;&nbsp;&nbsp;</SPAN><A HREF="SSIteratedAchieveREResponder.html" CLASS="f5">NEXT CLASS</A></TD>
<TD><A HREF="../../index.html?sajas/proto/SSContractNetResponder.html" TARGET="_top" CLASS="f5">FRAMES</A><SPAN CLASS="f4">&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><A HREF="SSContractNetResponder.html" TARGET="_top" CLASS="f5">NO FRAMES</A><SPAN CLASS="f4">&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><A HREF="../../all-classes-summary.html" CLASS="f5">All Classes</A></TD>
</TR>
<TR>
<TD><SPAN CLASS="f4">SUMMARY:&nbsp;<A HREF="#a1">NESTED</A>&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></SPAN></TD>
<TD><SPAN CLASS="f4">DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></SPAN></TD>
</TR>
</TABLE>
</TD>
</TR>
</TABLE>
<HR>
<DIV CLASS="p16"><SPAN CLASS="f16">sajas.proto</SPAN></DIV><DIV CLASS="p17"><SPAN CLASS="f8">Class SSContractNetResponder</SPAN></DIV><DIV CLASS="p18"><SPAN CLASS="f15">java.lang.Object</SPAN></DIV><DIV CLASS="p7"><SPAN CLASS="f15">&nbsp;&nbsp;<IMG SRC="../../resources/inherit.gif" WIDTH="15" HEIGHT="14"><A HREF="../core/behaviours/Behaviour.html">sajas.core.behaviours.Behaviour</A></SPAN></DIV><DIV CLASS="p7"><SPAN CLASS="f15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<IMG SRC="../../resources/inherit.gif" WIDTH="15" HEIGHT="14"><A HREF="../core/behaviours/CompositeBehaviour.html">sajas.core.behaviours.CompositeBehaviour</A></SPAN></DIV><DIV CLASS="p7"><SPAN CLASS="f15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<IMG SRC="../../resources/inherit.gif" WIDTH="15" HEIGHT="14"><A HREF="../core/behaviours/SerialBehaviour.html">sajas.core.behaviours.SerialBehaviour</A></SPAN></DIV><DIV CLASS="p7"><SPAN CLASS="f15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<IMG SRC="../../resources/inherit.gif" WIDTH="15" HEIGHT="14"><A HREF="../core/behaviours/FSMBehaviour.html">sajas.core.behaviours.FSMBehaviour</A></SPAN></DIV><DIV CLASS="p7"><SPAN CLASS="f15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<IMG SRC="../../resources/inherit.gif" WIDTH="15" HEIGHT="14"></SPAN><SPAN CLASS="f17">sajas.proto.SSContractNetResponder</SPAN></DIV><DIV CLASS="p14"><SPAN CLASS="f7">All Implemented Interfaces:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>jade.util.leap.Serializable, Serializable</DIV></DD></DL>
<DIV CLASS="p14"><SPAN CLASS="f7">Direct Known Subclasses:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><A HREF="ContractNetResponder.html" title="class in sajas.proto">ContractNetResponder</A>, <A HREF="SSIteratedContractNetResponder.html" title="class in sajas.proto">SSIteratedContractNetResponder</A></DIV></DD></DL>
<DIV CLASS="p19"><HR></DIV>
<DIV CLASS="p15"><SPAN CLASS="f15">public class </SPAN><SPAN CLASS="f17">SSContractNetResponder</SPAN></DIV><DIV><SPAN CLASS="f15">extends <A HREF="../core/behaviours/FSMBehaviour.html" title="class in sajas.core.behaviours">FSMBehaviour</A></SPAN></DIV><DIV CLASS="p2">Note: this class has been re-implemented to redirect the use of the agent, behaviour and protocol classes to SAJaS versions.</DIV><DIV CLASS="p2"><SPAN CLASS="f7">Author:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>hlc</DIV></DD></DL>
<DIV><SPAN CLASS="f7">See Also:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">jade.proto.SSContractNetResponder</SPAN></DIV></DD></DL>
<DIV CLASS="p15"><HR></DIV>
<DIV CLASS="p2">
<A NAME="a1"></A><TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc1"><SPAN CLASS="f7">Nested classes/interfaces inherited from class sajas.core.behaviours.<A HREF="../core/behaviours/Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></TD>
</TR>
<TR>
<TD><SPAN CLASS="f15"><A HREF="../core/behaviours/Behaviour.RunnableChangedEvent.html">Behaviour.RunnableChangedEvent</A></SPAN></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<A NAME="field_summary"></A><TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR BGCOLOR="#CCCCFF">
<TD COLSPAN="3" WIDTH="87.3%"><SPAN CLASS="f8">Field Summary</SPAN></TD>
</TR>
<TR>
<TD WIDTH="1%" ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">String</SPAN></DIV></TD>
<TD COLSPAN="2" WIDTH="86.3%" VALIGN="top"><SPAN CLASS="f17"><A HREF="#ACCEPT_PROPOSAL_KEY">ACCEPT_PROPOSAL_KEY</A></SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Key to retrieve from the DataStore of the behaviour the last received ACCEPT_PROPOSAL ACLMessage</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">String</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#CFP_KEY">CFP_KEY</A></SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Key to retrieve from the DataStore of the behaviour the last received CFP ACLMessage</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">protected static&nbsp;String</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#CHECK_IN_SEQ">CHECK_IN_SEQ</A></SPAN></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">protected static&nbsp;String</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#DUMMY_FINAL">DUMMY_FINAL</A></SPAN></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">static&nbsp;String</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#HANDLE_ACCEPT_PROPOSAL">HANDLE_ACCEPT_PROPOSAL</A></SPAN></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">static&nbsp;String</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#HANDLE_CFP">HANDLE_CFP</A></SPAN></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">protected static&nbsp;String</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#HANDLE_OUT_OF_SEQUENCE">HANDLE_OUT_OF_SEQUENCE</A></SPAN></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">static&nbsp;String</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#HANDLE_REJECT_PROPOSAL">HANDLE_REJECT_PROPOSAL</A></SPAN></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">String</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#INITIATION_KEY">INITIATION_KEY</A></SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Key to retrieve from the DataStore of the behaviour the initiation ACLMessage that triggered this responder session</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">String</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#PROPOSE_KEY">PROPOSE_KEY</A></SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Key to retrieve from the DataStore of the behaviour the last sent PROPOSE ACLMessage</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">protected static&nbsp;String</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#RECEIVE_NEXT">RECEIVE_NEXT</A></SPAN></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">String</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#RECEIVED_KEY">RECEIVED_KEY</A></SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Key to retrieve from the DataStore of the behaviour the last received ACLMessage</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">String</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#REJECT_PROPOSAL_KEY">REJECT_PROPOSAL_KEY</A></SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Key to retrieve from the DataStore of the behaviour the last received REJECT_PROPOSAL ACLMessage</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">String</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#REPLY_KEY">REPLY_KEY</A></SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Key to set into the DataStore of the behaviour the new ACLMessage to be sent back to the initiator as a reply.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">protected static&nbsp;String</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#SEND_REPLY">SEND_REPLY</A></SPAN></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc1"><SPAN CLASS="f7">Fields inherited from class sajas.core.behaviours.<A HREF="../core/behaviours/FSMBehaviour.html" title="class in sajas.core.behaviours">FSMBehaviour</A></SPAN></TD>
</TR>
<TR>
<TD><SPAN CLASS="f15"><A HREF="../core/behaviours/FSMBehaviour.html#currentName">currentName</A>, <A HREF="../core/behaviours/FSMBehaviour.html#lastStates">lastStates</A></SPAN></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc1"><SPAN CLASS="f7">Fields inherited from class sajas.core.behaviours.<A HREF="../core/behaviours/CompositeBehaviour.html" title="class in sajas.core.behaviours">CompositeBehaviour</A></SPAN></TD>
</TR>
<TR>
<TD><SPAN CLASS="f15"><A HREF="../core/behaviours/CompositeBehaviour.html#currentExecuted">currentExecuted</A></SPAN></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc1"><SPAN CLASS="f7">Fields inherited from class sajas.core.behaviours.<A HREF="../core/behaviours/Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></TD>
</TR>
<TR>
<TD><SPAN CLASS="f15"><A HREF="../core/behaviours/Behaviour.html#myAgent">myAgent</A>, <A HREF="../core/behaviours/Behaviour.html#myEvent">myEvent</A>, <A HREF="../core/behaviours/Behaviour.html#NOTIFY_DOWN">NOTIFY_DOWN</A>, <A HREF="../core/behaviours/Behaviour.html#NOTIFY_UP">NOTIFY_UP</A>, <A HREF="../core/behaviours/Behaviour.html#parent">parent</A>, <A HREF="../core/behaviours/Behaviour.html#STATE_BLOCKED">STATE_BLOCKED</A>, <A HREF="../core/behaviours/Behaviour.html#STATE_READY">STATE_READY</A>, <A HREF="../core/behaviours/Behaviour.html#STATE_RUNNING">STATE_RUNNING</A></SPAN></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<A NAME="constructor_summary"></A><TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR BGCOLOR="#CCCCFF">
<TD COLSPAN="3" WIDTH="87.3%"><SPAN CLASS="f8">Constructor Summary</SPAN></TD>
</TR>
<TR>
<TD COLSPAN="3" WIDTH="87.3%" VALIGN="top"><SPAN CLASS="f17"><A HREF="#SSContractNetResponder(sajas.core.Agent, jade.lang.acl.ACLMessage)">SSContractNetResponder</A></SPAN><SPAN CLASS="f15">(<A HREF="../core/Agent.html" title="class in sajas.core">Agent</A> a, jade.lang.acl.ACLMessage cfp)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Construct a SSContractNetResponder that is activated by the reception of a given initiation CFP message.</DIV></TD>
</TR>
<TR>
<TD COLSPAN="3" VALIGN="top"><SPAN CLASS="f17"><A HREF="#SSContractNetResponder(sajas.core.Agent, jade.lang.acl.ACLMessage, sajas.core.behaviours.DataStore)">SSContractNetResponder</A></SPAN><SPAN CLASS="f15">(<A HREF="../core/Agent.html" title="class in sajas.core">Agent</A> a, jade.lang.acl.ACLMessage cfp, <A HREF="../core/behaviours/DataStore.html" title="class in sajas.core.behaviours">DataStore</A> store)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Construct a SSContractNetResponder that is activated by the reception of a given initiation CFP message and uses a given DataStore.</DIV></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<A NAME="method_summary"></A><TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR BGCOLOR="#CCCCFF">
<TD COLSPAN="3" WIDTH="87.3%"><SPAN CLASS="f8">Method Summary</SPAN></TD>
</TR>
<TR>
<TD WIDTH="1%" ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">protected void</SPAN></DIV></TD>
<TD COLSPAN="2" WIDTH="86.3%" VALIGN="top"><SPAN CLASS="f17"><A HREF="#afterReply(jade.lang.acl.ACLMessage)">afterReply</A></SPAN><SPAN CLASS="f15">(jade.lang.acl.ACLMessage reply)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method can be redefined by protocol specific implementations to update the status of the protocol just after a reply has been sent.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">protected void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#beforeReply(jade.lang.acl.ACLMessage)">beforeReply</A></SPAN><SPAN CLASS="f15">(jade.lang.acl.ACLMessage reply)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method can be redefined by protocol specific implementations to customize a reply that is going to be sent back to the initiator.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">protected boolean</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#checkInSequence(jade.lang.acl.ACLMessage)">checkInSequence</A></SPAN><SPAN CLASS="f15">(jade.lang.acl.ACLMessage received)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Check whether a received message complies with the protocol rules.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">protected jade.lang.acl.ACLMessage</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#handleAcceptProposal(jade.lang.acl.ACLMessage, jade.lang.acl.ACLMessage, jade.lang.acl.ACLMessage)">handleAcceptProposal</A></SPAN><SPAN CLASS="f15">(jade.lang.acl.ACLMessage cfp, jade.lang.acl.ACLMessage propose, jade.lang.acl.ACLMessage accept)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is called when an ACCEPT_PROPOSAL message is received from the initiator.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">protected jade.lang.acl.ACLMessage</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#handleCfp(jade.lang.acl.ACLMessage)">handleCfp</A></SPAN><SPAN CLASS="f15">(jade.lang.acl.ACLMessage cfp)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is called to handle the initial CFP message.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">protected void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#handleOutOfSequence(jade.lang.acl.ACLMessage)">handleOutOfSequence</A></SPAN><SPAN CLASS="f15">(jade.lang.acl.ACLMessage msg)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Redefine this method to call the overloaded version with 3 parameters.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">protected void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#handleOutOfSequence(jade.lang.acl.ACLMessage, jade.lang.acl.ACLMessage, jade.lang.acl.ACLMessage)">handleOutOfSequence</A></SPAN><SPAN CLASS="f15">(jade.lang.acl.ACLMessage cfp, jade.lang.acl.ACLMessage propose, jade.lang.acl.ACLMessage msg)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is called whenever a message is received that does not comply to the protocol rules.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">protected void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#handleRejectProposal(jade.lang.acl.ACLMessage, jade.lang.acl.ACLMessage, jade.lang.acl.ACLMessage)">handleRejectProposal</A></SPAN><SPAN CLASS="f15">(jade.lang.acl.ACLMessage cfp, jade.lang.acl.ACLMessage propose, jade.lang.acl.ACLMessage reject)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is called when a REJECT_PROPOSAL message is received from the initiator.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#onStart()">onStart</A></SPAN><SPAN CLASS="f15">()</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is just an empty placeholders for subclasses.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">protected void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#registerDSState(sajas.core.behaviours.Behaviour, java.lang.String)">registerDSState</A></SPAN><SPAN CLASS="f15">(<A HREF="../core/behaviours/Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A> b, String name)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Utility method to register a behaviour in a state of the protocol and set the DataStore appropriately</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#registerHandleAcceptProposal(sajas.core.behaviours.Behaviour)">registerHandleAcceptProposal</A></SPAN><SPAN CLASS="f15">(<A HREF="../core/behaviours/Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A> b)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method allows to register a user defined <code>Behaviour</code> in the HANDLE_ACCEPT_PROPOSAL state.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#registerHandleCfp(sajas.core.behaviours.Behaviour)">registerHandleCfp</A></SPAN><SPAN CLASS="f15">(<A HREF="../core/behaviours/Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A> b)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method allows to register a user defined <code>Behaviour</code> in the HANDLE_CFP state.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#registerHandleOutOfSequence(sajas.core.behaviours.Behaviour)">registerHandleOutOfSequence</A></SPAN><SPAN CLASS="f15">(<A HREF="../core/behaviours/Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A> b)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method allows to register a user defined <code>Behaviour</code> in the HANDLE_OUT_OF_SEQ state.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#registerHandleRejectProposal(sajas.core.behaviours.Behaviour)">registerHandleRejectProposal</A></SPAN><SPAN CLASS="f15">(<A HREF="../core/behaviours/Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A> b)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method allows to register a user defined <code>Behaviour</code> in the HANDLE_REJECT_PROPOSAL state.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">protected void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#reinit()">reinit</A></SPAN><SPAN CLASS="f15">()</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Re-initialize the internal state without performing a complete reset.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#reset()">reset</A></SPAN><SPAN CLASS="f15">()</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reset this behaviour.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">protected void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#sessionTerminated()">sessionTerminated</A></SPAN><SPAN CLASS="f15">()</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method can be redefined by protocol specific implementations to take proper actions after the completion of the current protocol session.</DIV></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc1"><SPAN CLASS="f7">Methods inherited from class sajas.core.behaviours.<A HREF="../core/behaviours/FSMBehaviour.html" title="class in sajas.core.behaviours">FSMBehaviour</A></SPAN></TD>
</TR>
<TR>
<TD><SPAN CLASS="f15"><A HREF="../core/behaviours/FSMBehaviour.html#checkTermination(boolean, int)">checkTermination</A>, <A HREF="../core/behaviours/FSMBehaviour.html#deregisterDefaultTransition(java.lang.String)">deregisterDefaultTransition</A>, <A HREF="../core/behaviours/FSMBehaviour.html#deregisterState(java.lang.String)">deregisterState</A>, <A HREF="../core/behaviours/FSMBehaviour.html#deregisterTransition(java.lang.String, int)">deregisterTransition</A>, <A HREF="../core/behaviours/FSMBehaviour.html#forceTransitionTo(java.lang.String)">forceTransitionTo</A>, <A HREF="../core/behaviours/FSMBehaviour.html#getChildren()">getChildren</A>, <A HREF="../core/behaviours/FSMBehaviour.html#getCurrent()">getCurrent</A>, <A HREF="../core/behaviours/FSMBehaviour.html#getLastExitValue()">getLastExitValue</A>, <A HREF="../core/behaviours/FSMBehaviour.html#getName(sajas.core.behaviours.Behaviour)">getName</A>, <A HREF="../core/behaviours/FSMBehaviour.html#getPrevious()">getPrevious</A>, <A HREF="../core/behaviours/FSMBehaviour.html#getState(java.lang.String)">getState</A>, <A HREF="../core/behaviours/FSMBehaviour.html#handleInconsistentFSM(java.lang.String, int)">handleInconsistentFSM</A>, <A HREF="../core/behaviours/FSMBehaviour.html#handleStateEntered(sajas.core.behaviours.Behaviour)">handleStateEntered</A>, <A HREF="../core/behaviours/FSMBehaviour.html#hasDefaultTransition(java.lang.String)">hasDefaultTransition</A>, <A HREF="../core/behaviours/FSMBehaviour.html#onEnd()">onEnd</A>, <A HREF="../core/behaviours/FSMBehaviour.html#registerDefaultTransition(java.lang.String, java.lang.String)">registerDefaultTransition</A>, <A HREF="../core/behaviours/FSMBehaviour.html#registerDefaultTransition(java.lang.String, java.lang.String, java.lang.String)">registerDefaultTransition</A>, <A HREF="../core/behaviours/FSMBehaviour.html#registerFirstState(sajas.core.behaviours.Behaviour, java.lang.String)">registerFirstState</A>, <A HREF="../core/behaviours/FSMBehaviour.html#registerLastState(sajas.core.behaviours.Behaviour, java.lang.String)">registerLastState</A>, <A HREF="../core/behaviours/FSMBehaviour.html#registerState(sajas.core.behaviours.Behaviour, java.lang.String)">registerState</A>, <A HREF="../core/behaviours/FSMBehaviour.html#registerTransition(java.lang.String, java.lang.String, int)">registerTransition</A>, <A HREF="../core/behaviours/FSMBehaviour.html#registerTransition(java.lang.String, java.lang.String, int, java.lang.String)">registerTransition</A>, <A HREF="../core/behaviours/FSMBehaviour.html#resetStates(java.lang.String)">resetStates</A>, <A HREF="../core/behaviours/FSMBehaviour.html#scheduleFirst()">scheduleFirst</A>, <A HREF="../core/behaviours/FSMBehaviour.html#scheduleNext(boolean, int)">scheduleNext</A>, <A HREF="../core/behaviours/FSMBehaviour.html#stringifyTransitionTable()">stringifyTransitionTable</A></SPAN></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc1"><SPAN CLASS="f7">Methods inherited from class sajas.core.behaviours.<A HREF="../core/behaviours/SerialBehaviour.html" title="class in sajas.core.behaviours">SerialBehaviour</A></SPAN></TD>
</TR>
<TR>
<TD><SPAN CLASS="f15"><A HREF="../core/behaviours/SerialBehaviour.html#handle(sajas.core.behaviours.Behaviour.RunnableChangedEvent)">handle</A></SPAN></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc1"><SPAN CLASS="f7">Methods inherited from class sajas.core.behaviours.<A HREF="../core/behaviours/CompositeBehaviour.html" title="class in sajas.core.behaviours">CompositeBehaviour</A></SPAN></TD>
</TR>
<TR>
<TD><SPAN CLASS="f15"><A HREF="../core/behaviours/CompositeBehaviour.html#action()">action</A>, <A HREF="../core/behaviours/CompositeBehaviour.html#done()">done</A>, <A HREF="../core/behaviours/CompositeBehaviour.html#handleBlockEvent()">handleBlockEvent</A>, <A HREF="../core/behaviours/CompositeBehaviour.html#handleRestartEvent()">handleRestartEvent</A>, <A HREF="../core/behaviours/CompositeBehaviour.html#registerAsChild(sajas.core.behaviours.Behaviour)">registerAsChild</A>, <A HREF="../core/behaviours/CompositeBehaviour.html#resetChildren()">resetChildren</A>, <A HREF="../core/behaviours/CompositeBehaviour.html#setAgent(sajas.core.Agent)">setAgent</A></SPAN></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc1"><SPAN CLASS="f7">Methods inherited from class sajas.core.behaviours.<A HREF="../core/behaviours/Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></TD>
</TR>
<TR>
<TD><SPAN CLASS="f15"><A HREF="../core/behaviours/Behaviour.html#actionWrapper()">actionWrapper</A>, <A HREF="../core/behaviours/Behaviour.html#block()">block</A>, <A HREF="../core/behaviours/Behaviour.html#block(long)">block</A>, <A HREF="../core/behaviours/Behaviour.html#getAgent()">getAgent</A>, <A HREF="../core/behaviours/Behaviour.html#getBehaviourName()">getBehaviourName</A>, <A HREF="../core/behaviours/Behaviour.html#getDataStore()">getDataStore</A>, <A HREF="../core/behaviours/Behaviour.html#getExecutionState()">getExecutionState</A>, <A HREF="../core/behaviours/Behaviour.html#getParent()">getParent</A>, <A HREF="../core/behaviours/Behaviour.html#getRestartCounter()">getRestartCounter</A>, <A HREF="../core/behaviours/Behaviour.html#isRunnable()">isRunnable</A>, <A HREF="../core/behaviours/Behaviour.html#restart()">restart</A>, <A HREF="../core/behaviours/Behaviour.html#root()">root</A>, <A HREF="../core/behaviours/Behaviour.html#setBehaviourName(java.lang.String)">setBehaviourName</A>, <A HREF="../core/behaviours/Behaviour.html#setDataStore(sajas.core.behaviours.DataStore)">setDataStore</A>, <A HREF="../core/behaviours/Behaviour.html#setExecutionState(java.lang.String)">setExecutionState</A></SPAN></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc1"><SPAN CLASS="f7">Methods inherited from class java.lang.Object</SPAN></TD>
</TR>
<TR>
<TD><SPAN CLASS="f15">clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</SPAN></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<A NAME="field_detail"></A><TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc3"><SPAN CLASS="f8">Field Detail</SPAN></TD>
</TR>
</TABLE></DIV>
<A NAME="ACCEPT_PROPOSAL_KEY"></A><DIV CLASS="p21"><SPAN CLASS="f19">ACCEPT_PROPOSAL_KEY</SPAN></DIV><DIV CLASS="p23"><SPAN CLASS="f15">public final String </SPAN><SPAN CLASS="f17">ACCEPT_PROPOSAL_KEY</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>Key to retrieve from the DataStore of the behaviour the last received
	 ACCEPT_PROPOSAL ACLMessage</DIV></DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="CFP_KEY"></A><DIV CLASS="p21"><SPAN CLASS="f19">CFP_KEY</SPAN></DIV><DIV CLASS="p23"><SPAN CLASS="f15">public final String </SPAN><SPAN CLASS="f17">CFP_KEY</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>Key to retrieve from the DataStore of the behaviour the last received
	 CFP ACLMessage</DIV></DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="CHECK_IN_SEQ"></A><DIV CLASS="p21"><SPAN CLASS="f19">CHECK_IN_SEQ</SPAN></DIV><DIV CLASS="p23"><SPAN CLASS="f15">protected static final String </SPAN><SPAN CLASS="f17">CHECK_IN_SEQ</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f7">See Also:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><A HREF="../../constant-values.html#sajas.proto.SSContractNetResponder.CHECK_IN_SEQ">Constant Field Values</A></DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="DUMMY_FINAL"></A><DIV CLASS="p21"><SPAN CLASS="f19">DUMMY_FINAL</SPAN></DIV><DIV CLASS="p23"><SPAN CLASS="f15">protected static final String </SPAN><SPAN CLASS="f17">DUMMY_FINAL</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f7">See Also:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><A HREF="../../constant-values.html#sajas.proto.SSContractNetResponder.DUMMY_FINAL">Constant Field Values</A></DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="HANDLE_ACCEPT_PROPOSAL"></A><DIV CLASS="p21"><SPAN CLASS="f19">HANDLE_ACCEPT_PROPOSAL</SPAN></DIV><DIV CLASS="p23"><SPAN CLASS="f15">public static final String </SPAN><SPAN CLASS="f17">HANDLE_ACCEPT_PROPOSAL</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f7">See Also:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><A HREF="../../constant-values.html#sajas.proto.SSContractNetResponder.HANDLE_ACCEPT_PROPOSAL">Constant Field Values</A></DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="HANDLE_CFP"></A><DIV CLASS="p21"><SPAN CLASS="f19">HANDLE_CFP</SPAN></DIV><DIV CLASS="p23"><SPAN CLASS="f15">public static final String </SPAN><SPAN CLASS="f17">HANDLE_CFP</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f7">See Also:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><A HREF="../../constant-values.html#sajas.proto.SSContractNetResponder.HANDLE_CFP">Constant Field Values</A></DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="HANDLE_OUT_OF_SEQUENCE"></A><DIV CLASS="p21"><SPAN CLASS="f19">HANDLE_OUT_OF_SEQUENCE</SPAN></DIV><DIV CLASS="p23"><SPAN CLASS="f15">protected static final String </SPAN><SPAN CLASS="f17">HANDLE_OUT_OF_SEQUENCE</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f7">See Also:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><A HREF="../../constant-values.html#sajas.proto.SSContractNetResponder.HANDLE_OUT_OF_SEQUENCE">Constant Field Values</A></DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="HANDLE_REJECT_PROPOSAL"></A><DIV CLASS="p21"><SPAN CLASS="f19">HANDLE_REJECT_PROPOSAL</SPAN></DIV><DIV CLASS="p23"><SPAN CLASS="f15">public static final String </SPAN><SPAN CLASS="f17">HANDLE_REJECT_PROPOSAL</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f7">See Also:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><A HREF="../../constant-values.html#sajas.proto.SSContractNetResponder.HANDLE_REJECT_PROPOSAL">Constant Field Values</A></DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="INITIATION_KEY"></A><DIV CLASS="p21"><SPAN CLASS="f19">INITIATION_KEY</SPAN></DIV><DIV CLASS="p23"><SPAN CLASS="f15">public final String </SPAN><SPAN CLASS="f17">INITIATION_KEY</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>Key to retrieve from the DataStore of the behaviour the initiation
	 ACLMessage that triggered this responder session</DIV></DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="PROPOSE_KEY"></A><DIV CLASS="p21"><SPAN CLASS="f19">PROPOSE_KEY</SPAN></DIV><DIV CLASS="p23"><SPAN CLASS="f15">public final String </SPAN><SPAN CLASS="f17">PROPOSE_KEY</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>Key to retrieve from the DataStore of the behaviour the last sent
	 PROPOSE ACLMessage</DIV></DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="RECEIVE_NEXT"></A><DIV CLASS="p21"><SPAN CLASS="f19">RECEIVE_NEXT</SPAN></DIV><DIV CLASS="p23"><SPAN CLASS="f15">protected static final String </SPAN><SPAN CLASS="f17">RECEIVE_NEXT</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f7">See Also:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><A HREF="../../constant-values.html#sajas.proto.SSContractNetResponder.RECEIVE_NEXT">Constant Field Values</A></DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="RECEIVED_KEY"></A><DIV CLASS="p21"><SPAN CLASS="f19">RECEIVED_KEY</SPAN></DIV><DIV CLASS="p23"><SPAN CLASS="f15">public final String </SPAN><SPAN CLASS="f17">RECEIVED_KEY</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>Key to retrieve from the DataStore of the behaviour the last received
	 ACLMessage</DIV></DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="REJECT_PROPOSAL_KEY"></A><DIV CLASS="p21"><SPAN CLASS="f19">REJECT_PROPOSAL_KEY</SPAN></DIV><DIV CLASS="p23"><SPAN CLASS="f15">public final String </SPAN><SPAN CLASS="f17">REJECT_PROPOSAL_KEY</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>Key to retrieve from the DataStore of the behaviour the last received
	 REJECT_PROPOSAL ACLMessage</DIV></DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="REPLY_KEY"></A><DIV CLASS="p21"><SPAN CLASS="f19">REPLY_KEY</SPAN></DIV><DIV CLASS="p23"><SPAN CLASS="f15">public final String </SPAN><SPAN CLASS="f17">REPLY_KEY</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>Key to set into the DataStore of the behaviour the new ACLMessage 
	 to be sent back to the initiator as a reply.</DIV></DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="SEND_REPLY"></A><DIV CLASS="p21"><SPAN CLASS="f19">SEND_REPLY</SPAN></DIV><DIV CLASS="p23"><SPAN CLASS="f15">protected static final String </SPAN><SPAN CLASS="f17">SEND_REPLY</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f7">See Also:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><A HREF="../../constant-values.html#sajas.proto.SSContractNetResponder.SEND_REPLY">Constant Field Values</A></DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2">
<A NAME="constructor_detail"></A><TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc3"><SPAN CLASS="f8">Constructor Detail</SPAN></TD>
</TR>
</TABLE></DIV>
<A NAME="SSContractNetResponder(sajas.core.Agent, jade.lang.acl.ACLMessage)"></A><DIV CLASS="p21"><SPAN CLASS="f19">SSContractNetResponder</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">public&nbsp;</SPAN><SPAN CLASS="f17">SSContractNetResponder</SPAN><SPAN CLASS="f15">(<A HREF="../core/Agent.html" title="class in sajas.core">Agent</A>&nbsp;a,</SPAN><BR><SPAN CLASS="f15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jade.lang.acl.ACLMessage&nbsp;cfp)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>Construct a SSContractNetResponder that is activated 
	 by the reception of a given initiation CFP message.</DIV></DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="SSContractNetResponder(sajas.core.Agent, jade.lang.acl.ACLMessage, sajas.core.behaviours.DataStore)"></A><DIV CLASS="p21"><SPAN CLASS="f19">SSContractNetResponder</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">public&nbsp;</SPAN><SPAN CLASS="f17">SSContractNetResponder</SPAN><SPAN CLASS="f15">(<A HREF="../core/Agent.html" title="class in sajas.core">Agent</A>&nbsp;a,</SPAN><BR><SPAN CLASS="f15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jade.lang.acl.ACLMessage&nbsp;cfp,</SPAN><BR><SPAN CLASS="f15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="../core/behaviours/DataStore.html" title="class in sajas.core.behaviours">DataStore</A>&nbsp;store)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>Construct a SSContractNetResponder that is activated 
	 by the reception of a given initiation CFP message and uses 
	 a given DataStore.</DIV></DD></DL>
<DIV CLASS="p2">
<A NAME="method_detail"></A><TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc3"><SPAN CLASS="f8">Method Detail</SPAN></TD>
</TR>
</TABLE></DIV>
<A NAME="handleCfp(jade.lang.acl.ACLMessage)"></A><DIV CLASS="p21"><SPAN CLASS="f19">handleCfp</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">protected&nbsp;jade.lang.acl.ACLMessage&nbsp;</SPAN><SPAN CLASS="f17">handleCfp</SPAN><SPAN CLASS="f15">(jade.lang.acl.ACLMessage&nbsp;cfp)</SPAN><BR><SPAN CLASS="f15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throws&nbsp;jade.domain.FIPAAgentManagement.RefuseException,</SPAN><BR><SPAN CLASS="f15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jade.domain.FIPAAgentManagement.FailureException,</SPAN><BR><SPAN CLASS="f15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jade.domain.FIPAAgentManagement.NotUnderstoodException</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>This method is called to handle the initial CFP message.
	 This default implementation does nothing and returns null.
	 Programmers have to override it to react to this event.</DIV><DIV CLASS="p15"><SPAN CLASS="f7">Parameters:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">cfp</SPAN> - the initial CFP message to handle.</DIV></DD></DL>
<DIV><SPAN CLASS="f7">Returns:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>the reply message to be sent back to the initiator. Returning 
	 a message different than PROPOSE (or returning null) terminates the protocol.</DIV></DD></DL>
<DIV><SPAN CLASS="f7">Throws:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">jade.domain.FIPAAgentManagement.RefuseException</SPAN> - if the CFP is refused. Throwing a 
	 RefuseException has the same effect as returning a REFUSE message, 
	 but automatically manages the <code>:content</code> slot.</DIV></DD></DL>
<DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">jade.domain.FIPAAgentManagement.FailureException</SPAN> - if there is an error serving the CFP.
	 Throwing a FailureException has the same effect as returning a FAILURE
	 message, but automatically manages the <code>:content</code> slot.</DIV></DD></DL>
<DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">jade.domain.FIPAAgentManagement.NotUnderstoodException</SPAN> - if the CFP content is not understood.
	 Throwing a NotUnderstoodException has the same effect as returning a NOT_UNDERSTOOD
	 message, but automatically manages the <code>:content</code> slot.</DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="handleAcceptProposal(jade.lang.acl.ACLMessage, jade.lang.acl.ACLMessage, jade.lang.acl.ACLMessage)"></A><DIV CLASS="p21"><SPAN CLASS="f19">handleAcceptProposal</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">protected&nbsp;jade.lang.acl.ACLMessage&nbsp;</SPAN><SPAN CLASS="f17">handleAcceptProposal</SPAN><SPAN CLASS="f15">(jade.lang.acl.ACLMessage&nbsp;cfp,</SPAN><BR><SPAN CLASS="f15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jade.lang.acl.ACLMessage&nbsp;propose,</SPAN><BR><SPAN CLASS="f15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jade.lang.acl.ACLMessage&nbsp;accept)</SPAN><BR><SPAN CLASS="f15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throws&nbsp;jade.domain.FIPAAgentManagement.FailureException</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>This method is called when an ACCEPT_PROPOSAL message is received from the 
	 initiator.
	 This default implementation does nothing and returns null.
	 Programmers have to override it to react to this event.</DIV><DIV CLASS="p15"><SPAN CLASS="f7">Parameters:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">cfp</SPAN> - the initial CFP message.</DIV></DD></DL>
<DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">propose</SPAN> - the PROPOSE message sent back as reply to the initial 
	 CFP message.</DIV></DD></DL>
<DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">accept</SPAN> - the received ACCEPT_PROPOSAL message.</DIV></DD></DL>
<DIV><SPAN CLASS="f7">Returns:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>the reply message to be sent back to the initiator.</DIV></DD></DL>
<DIV><SPAN CLASS="f7">Throws:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">jade.domain.FIPAAgentManagement.FailureException</SPAN> - if there is an error serving the ACCEPT_PROPOSAL.
	 Throwing a FailureException has the same effect as returning a FAILURE
	 message, but automatically manages the <code>:content</code> slot.</DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="handleRejectProposal(jade.lang.acl.ACLMessage, jade.lang.acl.ACLMessage, jade.lang.acl.ACLMessage)"></A><DIV CLASS="p21"><SPAN CLASS="f19">handleRejectProposal</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">protected&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">handleRejectProposal</SPAN><SPAN CLASS="f15">(jade.lang.acl.ACLMessage&nbsp;cfp,</SPAN><BR><SPAN CLASS="f15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jade.lang.acl.ACLMessage&nbsp;propose,</SPAN><BR><SPAN CLASS="f15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jade.lang.acl.ACLMessage&nbsp;reject)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>This method is called when a REJECT_PROPOSAL message is received from the 
	 initiator.
	 This default implementation does nothing.
	 Programmers may override it to react to this event.</DIV><DIV CLASS="p15"><SPAN CLASS="f7">Parameters:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">cfp</SPAN> - the initial CFP message.</DIV></DD></DL>
<DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">propose</SPAN> - the PROPOSE message sent back as reply to the initial 
	 CFP message.</DIV></DD></DL>
<DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">reject</SPAN> - the received REJECT_PROPOSAL message or null if no 
	 acceptance message is received from the initiator within the timeout
	 specified in the <code>:reply-by</code> slot of the PROPOSE message.</DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="handleOutOfSequence(jade.lang.acl.ACLMessage, jade.lang.acl.ACLMessage, jade.lang.acl.ACLMessage)"></A><DIV CLASS="p21"><SPAN CLASS="f19">handleOutOfSequence</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">protected&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">handleOutOfSequence</SPAN><SPAN CLASS="f15">(jade.lang.acl.ACLMessage&nbsp;cfp,</SPAN><BR><SPAN CLASS="f15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jade.lang.acl.ACLMessage&nbsp;propose,</SPAN><BR><SPAN CLASS="f15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jade.lang.acl.ACLMessage&nbsp;msg)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>This method is called whenever a message is received that does
	 not comply to the protocol rules.
	 This default implementation does nothing.
	 Programmers may override it in case they need to react to this event.</DIV><DIV CLASS="p15"><SPAN CLASS="f7">Parameters:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">cfp</SPAN> - the initial CFP message.</DIV></DD></DL>
<DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">propose</SPAN> - the PROPOSE message sent back as reply to the initial 
	 CFP message.</DIV></DD></DL>
<DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">msg</SPAN> - the received out-of-sequence message.</DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="registerHandleCfp(sajas.core.behaviours.Behaviour)"></A><DIV CLASS="p21"><SPAN CLASS="f19">registerHandleCfp</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">public&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">registerHandleCfp</SPAN><SPAN CLASS="f15">(<A HREF="../core/behaviours/Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A>&nbsp;b)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>This method allows to register a user defined <code>Behaviour</code>
	 in the HANDLE_CFP state.
	 This behaviour would override the homonymous method.
	 This method also sets the 
	 data store of the registered <code>Behaviour</code> to the
	 DataStore of this current behaviour.
	 <br>
	 The registered behaviour can retrieve the initial <code>CFP</code> 
	 message from the datastore at the <code>CFP_KEY</code> key.
	 <br>
	 It is responsibility of the registered behaviour to put the
	 reply to be sent back to the initiator into the datastore at the 
	 <code>REPLY_KEY</code> key. Putting a message defferent from PROPOSE 
	 (or putting no message) terminates the protocol.</DIV><DIV CLASS="p15"><SPAN CLASS="f7">Parameters:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">b</SPAN> - the Behaviour that will handle this state</DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="registerHandleAcceptProposal(sajas.core.behaviours.Behaviour)"></A><DIV CLASS="p21"><SPAN CLASS="f19">registerHandleAcceptProposal</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">public&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">registerHandleAcceptProposal</SPAN><SPAN CLASS="f15">(<A HREF="../core/behaviours/Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A>&nbsp;b)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>This method allows to register a user defined <code>Behaviour</code>
	 in the HANDLE_ACCEPT_PROPOSAL state.
	 This behaviour would override the homonymous method.
	 This method also sets the 
	 data store of the registered <code>Behaviour</code> to the
	 DataStore of this current behaviour.
	 <br>
	 The registered behaviour can retrieve the received <code>ACCEPT_PROPOSAL</code> 
	 message from the datastore at the <code>ACCEPT_PROPOSAL_KEY</code> 
	 key, the initial <code>CFP</code> message at the <code>CFP_KEY</code>
	 and the previously sent <code>PROPOSE</code> message at the 
	 <code>PROPOSE_KEY</code>.
	 <br>
	 It is responsibility of the registered behaviour to put the
	 reply to be sent back to the initiator into the datastore at the 
	 <code>REPLY_KEY</code> key.</DIV><DIV CLASS="p15"><SPAN CLASS="f7">Parameters:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">b</SPAN> - the Behaviour that will handle this state</DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="registerHandleRejectProposal(sajas.core.behaviours.Behaviour)"></A><DIV CLASS="p21"><SPAN CLASS="f19">registerHandleRejectProposal</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">public&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">registerHandleRejectProposal</SPAN><SPAN CLASS="f15">(<A HREF="../core/behaviours/Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A>&nbsp;b)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>This method allows to register a user defined <code>Behaviour</code>
	 in the HANDLE_REJECT_PROPOSAL state.
	 This behaviour would override the homonymous method.
	 This method also sets the 
	 data store of the registered <code>Behaviour</code> to the
	 DataStore of this current behaviour.
	 <br>
	 The registered behaviour can retrieve the received <code>REJECT_PROPOSAL</code> 
	 message from the datastore at the <code>REJECT_PROPOSAL_KEY</code> 
	 key, the initial <code>CFP</code> message at the <code>CFP_KEY</code>
	 and the previously sent <code>PROPOSE</code> message at the 
	 <code>PROPOSE_KEY</code>.</DIV><DIV CLASS="p15"><SPAN CLASS="f7">Parameters:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">b</SPAN> - the Behaviour that will handle this state</DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="reinit()"></A><DIV CLASS="p21"><SPAN CLASS="f19">reinit</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">protected&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">reinit</SPAN><SPAN CLASS="f15">()</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>Re-initialize the internal state without performing a complete reset.</DIV></DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="handleOutOfSequence(jade.lang.acl.ACLMessage)"></A><DIV CLASS="p21"><SPAN CLASS="f19">handleOutOfSequence</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">protected&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">handleOutOfSequence</SPAN><SPAN CLASS="f15">(jade.lang.acl.ACLMessage&nbsp;msg)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>Redefine this method to call the overloaded version with 3 parameters.</DIV><DIV CLASS="p15"><SPAN CLASS="f7">Parameters:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">msg</SPAN> - the received out-of-sequence message.</DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="checkInSequence(jade.lang.acl.ACLMessage)"></A><DIV CLASS="p21"><SPAN CLASS="f19">checkInSequence</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">protected&nbsp;boolean&nbsp;</SPAN><SPAN CLASS="f17">checkInSequence</SPAN><SPAN CLASS="f15">(jade.lang.acl.ACLMessage&nbsp;received)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>Check whether a received message complies with the protocol rules.</DIV></DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="beforeReply(jade.lang.acl.ACLMessage)"></A><DIV CLASS="p21"><SPAN CLASS="f19">beforeReply</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">protected&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">beforeReply</SPAN><SPAN CLASS="f15">(jade.lang.acl.ACLMessage&nbsp;reply)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>This method can be redefined by protocol specific implementations
	 to customize a reply that is going to be sent back to the initiator.
	 This default implementation does nothing.</DIV></DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="afterReply(jade.lang.acl.ACLMessage)"></A><DIV CLASS="p21"><SPAN CLASS="f19">afterReply</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">protected&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">afterReply</SPAN><SPAN CLASS="f15">(jade.lang.acl.ACLMessage&nbsp;reply)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>This method can be redefined by protocol specific implementations
	 to update the status of the protocol just after a reply has been sent.
	 This default implementation does nothing.</DIV></DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="onStart()"></A><DIV CLASS="p21"><SPAN CLASS="f19">onStart</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">public&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">onStart</SPAN><SPAN CLASS="f15">()</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f7">Description copied from class: </SPAN><SPAN CLASS="f17"><A HREF="../core/behaviours/Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></DIV><DIV>This method is just an empty placeholders for subclasses. It is
	 executed just once before starting behaviour execution. 
	 Therefore, it acts as a prolog to the task
	 represented by this <code>Behaviour</code>.</DIV><DIV CLASS="p15"><SPAN CLASS="f7">Overrides:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15"><A HREF="../core/behaviours/Behaviour.html#onStart()">onStart</A></SPAN> in class <SPAN CLASS="f15"><A HREF="../core/behaviours/Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="registerHandleOutOfSequence(sajas.core.behaviours.Behaviour)"></A><DIV CLASS="p21"><SPAN CLASS="f19">registerHandleOutOfSequence</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">public&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">registerHandleOutOfSequence</SPAN><SPAN CLASS="f15">(<A HREF="../core/behaviours/Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A>&nbsp;b)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>This method allows to register a user defined <code>Behaviour</code>
	 in the HANDLE_OUT_OF_SEQ state.
	 This behaviour would override the homonymous method.
	 This method also sets the 
	 data store of the registered <code>Behaviour</code> to the
	 DataStore of this current behaviour.
	 The registered behaviour can retrieve
	 the <code>out of sequence</code> ACLMessage object received
	 from the datastore at the <code>RECEIVED_KEY</code>
	 key.</DIV><DIV CLASS="p15"><SPAN CLASS="f7">Parameters:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">b</SPAN> - the Behaviour that will handle this state</DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="reset()"></A><DIV CLASS="p21"><SPAN CLASS="f19">reset</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">public&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">reset</SPAN><SPAN CLASS="f15">()</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>Reset this behaviour.</DIV><DIV CLASS="p15"><SPAN CLASS="f7">Overrides:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15"><A HREF="../core/behaviours/FSMBehaviour.html#reset()">reset</A></SPAN> in class <SPAN CLASS="f15"><A HREF="../core/behaviours/FSMBehaviour.html" title="class in sajas.core.behaviours">FSMBehaviour</A></SPAN></DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="sessionTerminated()"></A><DIV CLASS="p21"><SPAN CLASS="f19">sessionTerminated</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">protected&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">sessionTerminated</SPAN><SPAN CLASS="f15">()</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>This method can be redefined by protocol specific implementations
	 to take proper actions after the completion of the current protocol
	 session.</DIV></DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="registerDSState(sajas.core.behaviours.Behaviour, java.lang.String)"></A><DIV CLASS="p21"><SPAN CLASS="f19">registerDSState</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">protected&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">registerDSState</SPAN><SPAN CLASS="f15">(<A HREF="../core/behaviours/Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A>&nbsp;b,</SPAN><BR><SPAN CLASS="f15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;name)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>Utility method to register a behaviour in a state of the 
	 protocol and set the DataStore appropriately</DIV></DD></DL>
<DIV CLASS="p2"><HR></DIV>
<TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="0" BORDER="0">
<TR VALIGN="top">
<TD COLSPAN="2"><TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="1" BORDER="0">
<TR>
<TD COLSPAN="2" CLASS="tc1"><TABLE CELLSPACING="3" CELLPADDING="0" BORDER="0">
<TR>
<TD><A HREF="../../overview-summary.html"><SPAN CLASS="f3">Overview</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="package-summary.html"><SPAN CLASS="f3">Package</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD COLSPAN="2" CLASS="tc2"><SPAN CLASS="f1">&nbsp;</SPAN><SPAN CLASS="f2">Class</SPAN><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="package-tree.html"><SPAN CLASS="f3">Tree</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="../../deprecated-list.html"><SPAN CLASS="f3">Deprecated</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="../../index-all.html"><SPAN CLASS="f3">Index</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="../../help-doc.html"><SPAN CLASS="f3">Help</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD><A HREF="SimpleAchieveREResponder.html" CLASS="f5">PREV CLASS</A><SPAN CLASS="f4">&nbsp;&nbsp;&nbsp;</SPAN><A HREF="SSIteratedAchieveREResponder.html" CLASS="f5">NEXT CLASS</A></TD>
<TD><A HREF="../../index.html?sajas/proto/SSContractNetResponder.html" TARGET="_top" CLASS="f5">FRAMES</A><SPAN CLASS="f4">&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><A HREF="SSContractNetResponder.html" TARGET="_top" CLASS="f5">NO FRAMES</A><SPAN CLASS="f4">&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><A HREF="../../all-classes-summary.html" CLASS="f5">All Classes</A></TD>
</TR>
<TR>
<TD><SPAN CLASS="f4">SUMMARY:&nbsp;<A HREF="#a1">NESTED</A>&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></SPAN></TD>
<TD><SPAN CLASS="f4">DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></SPAN></TD>
</TR>
</TABLE>
</TD>
</TR>
</TABLE>
<HR>
<DIV><SPAN CLASS="f9">Java API documentation generated with <A HREF="http://www.filigris.com/products/docflex_javadoc/#docflex-doclet" TARGET="_blank">DocFlex/Doclet</A> 1.6.1 using <A HREF="http://www.filigris.com/products/docflex_javadoc/templates/JavadocPro/" TARGET="_blank">JavadocPro</A> template set.</SPAN></DIV><DIV CLASS="p5"><SPAN CLASS="f9"><A HREF="http://www.filigris.com/products/docflex_javadoc/#docflex-doclet" TARGET="_blank">DocFlex/Doclet</A> is both a multi-format Javadoc doclet and a free edition of <A HREF="http://www.filigris.com/products/docflex_javadoc/" TARGET="_blank">DocFlex/Javadoc</A>, which is a template-driven programming tool for rapid development of any Javadoc-based Java API documentation generators (i.e. doclets). If you need to customize your Javadoc without writing a full-blown doclet from scratch, <A HREF="http://www.filigris.com/products/docflex_javadoc/" TARGET="_blank">DocFlex/Javadoc</A> may be the only tool able to help you! Find out more at <A HREF="http://www.docflex.com/" TARGET="_blank">www.docflex.com</A></SPAN></DIV>
</BODY>
</HTML>