<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/REC-html4/loose.dtd">
<HTML>
<HEAD>
<!-- Generated by DocFlex/Doclet 1.6.1 on Tue Sep 01 14:08:03 BST 2015 -->
<TITLE>WrapperBehaviour (SAJaS)</TITLE>
<SCRIPT type="text/javascript">
    window.onload = function() {
        if (location.href.indexOf('is-external=true') == -1)
            parent.document.title="WrapperBehaviour (SAJaS)";
    }
</SCRIPT>
<LINK REL="stylesheet" TYPE="text/css" HREF="../../../stylesheet.css" TITLE="Style">
</HEAD>
<BODY>
<TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="0" BORDER="0">
<TR VALIGN="top">
<TD COLSPAN="2"><TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="1" BORDER="0">
<TR>
<TD COLSPAN="2" CLASS="tc1"><TABLE CELLSPACING="3" CELLPADDING="0" BORDER="0">
<TR>
<TD><A HREF="../../../overview-summary.html"><SPAN CLASS="f3">Overview</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="package-summary.html"><SPAN CLASS="f3">Package</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD COLSPAN="2" CLASS="tc2"><SPAN CLASS="f1">&nbsp;</SPAN><SPAN CLASS="f2">Class</SPAN><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="package-tree.html"><SPAN CLASS="f3">Tree</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="../../../deprecated-list.html"><SPAN CLASS="f3">Deprecated</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="../../../index-all.html"><SPAN CLASS="f3">Index</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="../../../help-doc.html"><SPAN CLASS="f3">Help</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD><A HREF="WakerBehaviour.html" CLASS="f5">PREV CLASS</A><SPAN CLASS="f4">&nbsp;&nbsp;&nbsp;NEXT CLASS</SPAN></TD>
<TD><A HREF="../../../index.html?sajas/core/behaviours/WrapperBehaviour.html" TARGET="_top" CLASS="f5">FRAMES</A><SPAN CLASS="f4">&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><A HREF="WrapperBehaviour.html" TARGET="_top" CLASS="f5">NO FRAMES</A><SPAN CLASS="f4">&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><A HREF="../../../all-classes-summary.html" CLASS="f5">All Classes</A></TD>
</TR>
<TR>
<TD><SPAN CLASS="f4">SUMMARY:&nbsp;<A HREF="#a1">NESTED</A>&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></SPAN></TD>
<TD><SPAN CLASS="f4">DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></SPAN></TD>
</TR>
</TABLE>
</TD>
</TR>
</TABLE>
<HR>
<DIV CLASS="p16"><SPAN CLASS="f16">sajas.core.behaviours</SPAN></DIV><DIV CLASS="p17"><SPAN CLASS="f8">Class WrapperBehaviour</SPAN></DIV><DIV CLASS="p18"><SPAN CLASS="f15">java.lang.Object</SPAN></DIV><DIV CLASS="p7"><SPAN CLASS="f15">&nbsp;&nbsp;<IMG SRC="../../../resources/inherit.gif" WIDTH="15" HEIGHT="14"><A HREF="Behaviour.html">sajas.core.behaviours.Behaviour</A></SPAN></DIV><DIV CLASS="p7"><SPAN CLASS="f15">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<IMG SRC="../../../resources/inherit.gif" WIDTH="15" HEIGHT="14"></SPAN><SPAN CLASS="f17">sajas.core.behaviours.WrapperBehaviour</SPAN></DIV><DIV CLASS="p14"><SPAN CLASS="f7">All Implemented Interfaces:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>jade.util.leap.Serializable, Serializable</DIV></DD></DL>
<DIV CLASS="p19"><HR></DIV>
<DIV CLASS="p15"><SPAN CLASS="f15">public class </SPAN><SPAN CLASS="f17">WrapperBehaviour</SPAN></DIV><DIV><SPAN CLASS="f15">extends <A HREF="Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></DIV><DIV CLASS="p2">This behaviour allows modifying on the fly the way an existing behaviour object works
 The following piece of code provides an example where we modify the <code>done()</code>
 method of an existing behaviour object to print on the standard output a proper message when the behaviour 
 is completing.
 
 <pr><hr><blockquote><pre>
 Behaviour b = // get the behaviour object 
 addBehaviour(new WrapperBehaviour(b) {
   public boolean done() {
     boolean ret = super.done();
     if (ret) {
       System.out.println("done() method returned true --> The behaviour is completing!");
     }
     return ret;
   }
 });
 </pre></blockquote><hr></DIV><DIV CLASS="p15"><HR></DIV>
<DIV CLASS="p2">
<A NAME="a1"></A><TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc1"><SPAN CLASS="f7">Nested classes/interfaces inherited from class sajas.core.behaviours.<A HREF="Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></TD>
</TR>
<TR>
<TD><SPAN CLASS="f15"><A HREF="Behaviour.RunnableChangedEvent.html">Behaviour.RunnableChangedEvent</A></SPAN></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<A NAME="field_summary"></A><TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc1"><SPAN CLASS="f7">Fields inherited from class sajas.core.behaviours.<A HREF="Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></TD>
</TR>
<TR>
<TD><SPAN CLASS="f15"><A HREF="Behaviour.html#myAgent">myAgent</A>, <A HREF="Behaviour.html#myEvent">myEvent</A>, <A HREF="Behaviour.html#NOTIFY_DOWN">NOTIFY_DOWN</A>, <A HREF="Behaviour.html#NOTIFY_UP">NOTIFY_UP</A>, <A HREF="Behaviour.html#parent">parent</A>, <A HREF="Behaviour.html#STATE_BLOCKED">STATE_BLOCKED</A>, <A HREF="Behaviour.html#STATE_READY">STATE_READY</A>, <A HREF="Behaviour.html#STATE_RUNNING">STATE_RUNNING</A></SPAN></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<A NAME="constructor_summary"></A><TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR BGCOLOR="#CCCCFF">
<TD COLSPAN="3" WIDTH="87.3%"><SPAN CLASS="f8">Constructor Summary</SPAN></TD>
</TR>
<TR>
<TD COLSPAN="3" WIDTH="87.3%" VALIGN="top"><SPAN CLASS="f17"><A HREF="#WrapperBehaviour(sajas.core.behaviours.Behaviour)">WrapperBehaviour</A></SPAN><SPAN CLASS="f15">(<A HREF="Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A> wrapped)</SPAN></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<A NAME="method_summary"></A><TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR BGCOLOR="#CCCCFF">
<TD COLSPAN="3" WIDTH="87.3%"><SPAN CLASS="f8">Method Summary</SPAN></TD>
</TR>
<TR>
<TD WIDTH="1%" ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">void</SPAN></DIV></TD>
<TD COLSPAN="2" WIDTH="86.3%" VALIGN="top"><SPAN CLASS="f17"><A HREF="#action()">action</A></SPAN><SPAN CLASS="f15">()</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Runs the behaviour.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">boolean</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#done()">done</A></SPAN><SPAN CLASS="f15">()</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Check if this behaviour is done.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18"><A HREF="DataStore.html" title="class in sajas.core.behaviours">DataStore</A></SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#getDataStore()">getDataStore</A></SPAN><SPAN CLASS="f15">()</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the private data store of this <code>Behaviour</code>.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18"><A HREF="Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#getWrappedBehaviour()">getWrappedBehaviour</A></SPAN><SPAN CLASS="f15">()</SPAN></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">protected void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#handle(sajas.core.behaviours.Behaviour.RunnableChangedEvent)">handle</A></SPAN><SPAN CLASS="f15">(<A HREF="Behaviour.RunnableChangedEvent.html" title="class in sajas.core.behaviours">Behaviour.RunnableChangedEvent</A> rce)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Handler for block/restart events.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">protected void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#handleBlockEvent()">handleBlockEvent</A></SPAN><SPAN CLASS="f15">()</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is used internally by the framework.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#handleRestartEvent()">handleRestartEvent</A></SPAN><SPAN CLASS="f15">()</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is used internally by the framework.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">int</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#onEnd()">onEnd</A></SPAN><SPAN CLASS="f15">()</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is just an empty placeholder for subclasses.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#onStart()">onStart</A></SPAN><SPAN CLASS="f15">()</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is just an empty placeholders for subclasses.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#reset()">reset</A></SPAN><SPAN CLASS="f15">()</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Restores behaviour initial state.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#setAgent(sajas.core.Agent)">setAgent</A></SPAN><SPAN CLASS="f15">(<A HREF="../Agent.html" title="class in sajas.core">Agent</A> a)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Associates this behaviour with the agent it belongs to.</DIV></TD>
</TR>
<TR>
<TD ALIGN="right" VALIGN="top"><DIV CLASS="p20"><SPAN CLASS="f18">void</SPAN></DIV></TD>
<TD COLSPAN="2" VALIGN="top"><SPAN CLASS="f17"><A HREF="#setDataStore(sajas.core.behaviours.DataStore)">setDataStore</A></SPAN><SPAN CLASS="f15">(<A HREF="DataStore.html" title="class in sajas.core.behaviours">DataStore</A> ds)</SPAN><DIV>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the private data store of this <code>Behaviour</code></DIV></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc1"><SPAN CLASS="f7">Methods inherited from class sajas.core.behaviours.<A HREF="Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></TD>
</TR>
<TR>
<TD><SPAN CLASS="f15"><A HREF="Behaviour.html#actionWrapper()">actionWrapper</A>, <A HREF="Behaviour.html#block()">block</A>, <A HREF="Behaviour.html#block(long)">block</A>, <A HREF="Behaviour.html#getAgent()">getAgent</A>, <A HREF="Behaviour.html#getBehaviourName()">getBehaviourName</A>, <A HREF="Behaviour.html#getExecutionState()">getExecutionState</A>, <A HREF="Behaviour.html#getParent()">getParent</A>, <A HREF="Behaviour.html#getRestartCounter()">getRestartCounter</A>, <A HREF="Behaviour.html#isRunnable()">isRunnable</A>, <A HREF="Behaviour.html#restart()">restart</A>, <A HREF="Behaviour.html#root()">root</A>, <A HREF="Behaviour.html#setBehaviourName(java.lang.String)">setBehaviourName</A>, <A HREF="Behaviour.html#setExecutionState(java.lang.String)">setExecutionState</A></SPAN></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc1"><SPAN CLASS="f7">Methods inherited from class java.lang.Object</SPAN></TD>
</TR>
<TR>
<TD><SPAN CLASS="f15">clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</SPAN></TD>
</TR>
</TABLE></DIV>
<DIV CLASS="p2">
<A NAME="constructor_detail"></A><TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc3"><SPAN CLASS="f8">Constructor Detail</SPAN></TD>
</TR>
</TABLE></DIV>
<A NAME="WrapperBehaviour(sajas.core.behaviours.Behaviour)"></A><DIV CLASS="p21"><SPAN CLASS="f19">WrapperBehaviour</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">public&nbsp;</SPAN><SPAN CLASS="f17">WrapperBehaviour</SPAN><SPAN CLASS="f15">(<A HREF="Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A>&nbsp;wrapped)</SPAN></DIV><DIV CLASS="p2">
<A NAME="method_detail"></A><TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="3" BORDER="1">
<TR>
<TD CLASS="tc3"><SPAN CLASS="f8">Method Detail</SPAN></TD>
</TR>
</TABLE></DIV>
<A NAME="handleBlockEvent()"></A><DIV CLASS="p21"><SPAN CLASS="f19">handleBlockEvent</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">protected&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">handleBlockEvent</SPAN><SPAN CLASS="f15">()</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>This method is used internally by the framework. Developer should not call or redefine it.</DIV><DIV CLASS="p15"><SPAN CLASS="f7">Overrides:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15"><A HREF="Behaviour.html#handleBlockEvent()">handleBlockEvent</A></SPAN> in class <SPAN CLASS="f15"><A HREF="Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="handleRestartEvent()"></A><DIV CLASS="p21"><SPAN CLASS="f19">handleRestartEvent</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">public&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">handleRestartEvent</SPAN><SPAN CLASS="f15">()</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>This method is used internally by the framework. Developer should not call or redefine it.</DIV><DIV CLASS="p15"><SPAN CLASS="f7">Overrides:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15"><A HREF="Behaviour.html#handleRestartEvent()">handleRestartEvent</A></SPAN> in class <SPAN CLASS="f15"><A HREF="Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="handle(sajas.core.behaviours.Behaviour.RunnableChangedEvent)"></A><DIV CLASS="p21"><SPAN CLASS="f19">handle</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">protected&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">handle</SPAN><SPAN CLASS="f15">(<A HREF="Behaviour.RunnableChangedEvent.html" title="class in sajas.core.behaviours">Behaviour.RunnableChangedEvent</A>&nbsp;rce)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f7">Description copied from class: </SPAN><SPAN CLASS="f17"><A HREF="Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></DIV><DIV>Handler for block/restart events. This method handles
	 notification by copying its runnable state and then by simply
	 forwarding the event when it is traveling upwards and by doing
	 nothing when it is traveling downwards, since an ordinary
	 behaviour has no children.</DIV><DIV CLASS="p15"><SPAN CLASS="f7">Overrides:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15"><A HREF="Behaviour.html#handle(sajas.core.behaviours.Behaviour.RunnableChangedEvent)">handle</A></SPAN> in class <SPAN CLASS="f15"><A HREF="Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></DIV></DD></DL>
<DIV><SPAN CLASS="f7">Parameters:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">rce</SPAN> - The event to handle</DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="setAgent(sajas.core.Agent)"></A><DIV CLASS="p21"><SPAN CLASS="f19">setAgent</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">public&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">setAgent</SPAN><SPAN CLASS="f15">(<A HREF="../Agent.html" title="class in sajas.core">Agent</A>&nbsp;a)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f7">Description copied from class: </SPAN><SPAN CLASS="f17"><A HREF="Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></DIV><DIV>Associates this behaviour with the agent it belongs to. There is
	 no need to call this method explicitly, since the
	 <code>addBehaviour()</code> call takes care of the association
	 transparently.</DIV><DIV CLASS="p15"><SPAN CLASS="f7">Overrides:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15"><A HREF="Behaviour.html#setAgent(sajas.core.Agent)">setAgent</A></SPAN> in class <SPAN CLASS="f15"><A HREF="Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></DIV></DD></DL>
<DIV><SPAN CLASS="f7">Parameters:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">a</SPAN> - The agent this behaviour belongs to.</DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="setDataStore(sajas.core.behaviours.DataStore)"></A><DIV CLASS="p21"><SPAN CLASS="f19">setDataStore</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">public&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">setDataStore</SPAN><SPAN CLASS="f15">(<A HREF="DataStore.html" title="class in sajas.core.behaviours">DataStore</A>&nbsp;ds)</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f7">Description copied from class: </SPAN><SPAN CLASS="f17"><A HREF="Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></DIV><DIV>Set the private data store of this <code>Behaviour</code></DIV><DIV CLASS="p15"><SPAN CLASS="f7">Overrides:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15"><A HREF="Behaviour.html#setDataStore(sajas.core.behaviours.DataStore)">setDataStore</A></SPAN> in class <SPAN CLASS="f15"><A HREF="Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></DIV></DD></DL>
<DIV><SPAN CLASS="f7">Parameters:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15">ds</SPAN> - the <code>DataStore</code> that this <code>Behaviour</code>
	 will use as its private data store</DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="getDataStore()"></A><DIV CLASS="p21"><SPAN CLASS="f19">getDataStore</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">public&nbsp;<A HREF="DataStore.html" title="class in sajas.core.behaviours">DataStore</A>&nbsp;</SPAN><SPAN CLASS="f17">getDataStore</SPAN><SPAN CLASS="f15">()</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f7">Description copied from class: </SPAN><SPAN CLASS="f17"><A HREF="Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></DIV><DIV>Return the private data store of this <code>Behaviour</code>.
	 If it was null, a new DataStore is created and returned.</DIV><DIV CLASS="p15"><SPAN CLASS="f7">Overrides:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15"><A HREF="Behaviour.html#getDataStore()">getDataStore</A></SPAN> in class <SPAN CLASS="f15"><A HREF="Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></DIV></DD></DL>
<DIV><SPAN CLASS="f7">Returns:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>The private data store of this <code>Behaviour</code></DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="reset()"></A><DIV CLASS="p21"><SPAN CLASS="f19">reset</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">public&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">reset</SPAN><SPAN CLASS="f15">()</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f7">Description copied from class: </SPAN><SPAN CLASS="f17"><A HREF="Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></DIV><DIV>Restores behaviour initial state. This method must be implemented
	 by concrete subclasses in such a way that calling
	 <code>reset()</code> on a behaviour object is equivalent to
	 destroying it and recreating it back. The main purpose for this
	 method is to realize multistep cyclic behaviours without needing
	 expensive constructions an deletion of objects at each loop
	 iteration.
	 Remind to call super.reset() from the sub-classes.</DIV><DIV CLASS="p15"><SPAN CLASS="f7">Overrides:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15"><A HREF="Behaviour.html#reset()">reset</A></SPAN> in class <SPAN CLASS="f15"><A HREF="Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="onStart()"></A><DIV CLASS="p21"><SPAN CLASS="f19">onStart</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">public&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">onStart</SPAN><SPAN CLASS="f15">()</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f7">Description copied from class: </SPAN><SPAN CLASS="f17"><A HREF="Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></DIV><DIV>This method is just an empty placeholders for subclasses. It is
	 executed just once before starting behaviour execution. 
	 Therefore, it acts as a prolog to the task
	 represented by this <code>Behaviour</code>.</DIV><DIV CLASS="p15"><SPAN CLASS="f7">Overrides:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15"><A HREF="Behaviour.html#onStart()">onStart</A></SPAN> in class <SPAN CLASS="f15"><A HREF="Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="action()"></A><DIV CLASS="p21"><SPAN CLASS="f19">action</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">public&nbsp;void&nbsp;</SPAN><SPAN CLASS="f17">action</SPAN><SPAN CLASS="f15">()</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f7">Description copied from class: </SPAN><SPAN CLASS="f17"><A HREF="Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></DIV><DIV>Runs the behaviour. This abstract method must be implemented by
	 <code>Behaviour</code>subclasses to perform ordinary behaviour
	 duty. An agent schedules its behaviours calling their
	 <code>action()</code> method; since all the behaviours belonging
	 to the same agent are scheduled cooperatively, this method
	 <b>must not</b> enter in an endless loop and should return as
	 soon as possible to preserve agent responsiveness. To split a
	 long and slow task into smaller section, recursive behaviour
	 aggregation may be used.</DIV><DIV CLASS="p15"><SPAN CLASS="f7">Overrides:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15"><A HREF="Behaviour.html#action()">action</A></SPAN> in class <SPAN CLASS="f15"><A HREF="Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="done()"></A><DIV CLASS="p21"><SPAN CLASS="f19">done</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">public&nbsp;boolean&nbsp;</SPAN><SPAN CLASS="f17">done</SPAN><SPAN CLASS="f15">()</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f7">Description copied from class: </SPAN><SPAN CLASS="f17"><A HREF="Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></DIV><DIV>Check if this behaviour is done. The agent scheduler calls this
	 method to see whether a <code>Behaviour</code> still need to be
	 run or it has completed its task. Concrete behaviours must
	 implement this method to return their completion state. Finished
	 behaviours are removed from the scheduling queue, while others
	 are kept within to be run again when their turn comes again.</DIV><DIV CLASS="p15"><SPAN CLASS="f7">Overrides:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15"><A HREF="Behaviour.html#done()">done</A></SPAN> in class <SPAN CLASS="f15"><A HREF="Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></DIV></DD></DL>
<DIV><SPAN CLASS="f7">Returns:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><code>true</code> if the behaviour has completely executed.</DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="onEnd()"></A><DIV CLASS="p21"><SPAN CLASS="f19">onEnd</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">public&nbsp;int&nbsp;</SPAN><SPAN CLASS="f17">onEnd</SPAN><SPAN CLASS="f15">()</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f7">Description copied from class: </SPAN><SPAN CLASS="f17"><A HREF="Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></DIV><DIV>This method is just an empty placeholder for subclasses. It is
	 invoked just once after this behaviour has ended. Therefore,
	 it acts as an epilog for the task represented by this
	 <code>Behaviour</code>.
	 <br>
	 Note that <code>onEnd</code> is called after the behaviour has been
	 removed from the pool of behaviours to be executed by an agent. 
	 Therefore calling
	 <code>reset()</code> is not sufficient to cyclically repeat the task
	 represented by this <code>Behaviour</code>. In order to achieve that, 
	 this <code>Behaviour</code> must be added again to the agent 
	 (using <code>myAgent.addBehaviour(this)</code>). The same applies to
	 in the case of a <code>Behaviour</code> that is a child of a 
	 <code>ParallelBehaviour</code>.</DIV><DIV CLASS="p15"><SPAN CLASS="f7">Overrides:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV><SPAN CLASS="f15"><A HREF="Behaviour.html#onEnd()">onEnd</A></SPAN> in class <SPAN CLASS="f15"><A HREF="Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A></SPAN></DIV></DD></DL>
<DIV><SPAN CLASS="f7">Returns:</SPAN></DIV><DL CLASS="p11"><DD>
<DIV>an integer code representing the termination value of
	 the behaviour.</DIV></DD></DL>
</DD></DL>
<DIV CLASS="p2"><HR></DIV>
<A NAME="getWrappedBehaviour()"></A><DIV CLASS="p21"><SPAN CLASS="f19">getWrappedBehaviour</SPAN></DIV><DIV CLASS="p22"><SPAN CLASS="f15">public&nbsp;<A HREF="Behaviour.html" title="class in sajas.core.behaviours">Behaviour</A>&nbsp;</SPAN><SPAN CLASS="f17">getWrappedBehaviour</SPAN><SPAN CLASS="f15">()</SPAN></DIV><DIV CLASS="p2"><HR></DIV>
<TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="0" BORDER="0">
<TR VALIGN="top">
<TD COLSPAN="2"><TABLE WIDTH="100%" CELLSPACING="0" CELLPADDING="1" BORDER="0">
<TR>
<TD COLSPAN="2" CLASS="tc1"><TABLE CELLSPACING="3" CELLPADDING="0" BORDER="0">
<TR>
<TD><A HREF="../../../overview-summary.html"><SPAN CLASS="f3">Overview</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="package-summary.html"><SPAN CLASS="f3">Package</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD COLSPAN="2" CLASS="tc2"><SPAN CLASS="f1">&nbsp;</SPAN><SPAN CLASS="f2">Class</SPAN><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="package-tree.html"><SPAN CLASS="f3">Tree</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="../../../deprecated-list.html"><SPAN CLASS="f3">Deprecated</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="../../../index-all.html"><SPAN CLASS="f3">Index</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
<TD><A HREF="../../../help-doc.html"><SPAN CLASS="f3">Help</SPAN></A><SPAN CLASS="f1">&nbsp;</SPAN></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD><A HREF="WakerBehaviour.html" CLASS="f5">PREV CLASS</A><SPAN CLASS="f4">&nbsp;&nbsp;&nbsp;NEXT CLASS</SPAN></TD>
<TD><A HREF="../../../index.html?sajas/core/behaviours/WrapperBehaviour.html" TARGET="_top" CLASS="f5">FRAMES</A><SPAN CLASS="f4">&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><A HREF="WrapperBehaviour.html" TARGET="_top" CLASS="f5">NO FRAMES</A><SPAN CLASS="f4">&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><A HREF="../../../all-classes-summary.html" CLASS="f5">All Classes</A></TD>
</TR>
<TR>
<TD><SPAN CLASS="f4">SUMMARY:&nbsp;<A HREF="#a1">NESTED</A>&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></SPAN></TD>
<TD><SPAN CLASS="f4">DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></SPAN></TD>
</TR>
</TABLE>
</TD>
</TR>
</TABLE>
<HR>
<DIV><SPAN CLASS="f9">Java API documentation generated with <A HREF="http://www.filigris.com/products/docflex_javadoc/#docflex-doclet" TARGET="_blank">DocFlex/Doclet</A> 1.6.1 using <A HREF="http://www.filigris.com/products/docflex_javadoc/templates/JavadocPro/" TARGET="_blank">JavadocPro</A> template set.</SPAN></DIV><DIV CLASS="p5"><SPAN CLASS="f9"><A HREF="http://www.filigris.com/products/docflex_javadoc/#docflex-doclet" TARGET="_blank">DocFlex/Doclet</A> is both a multi-format Javadoc doclet and a free edition of <A HREF="http://www.filigris.com/products/docflex_javadoc/" TARGET="_blank">DocFlex/Javadoc</A>, which is a template-driven programming tool for rapid development of any Javadoc-based Java API documentation generators (i.e. doclets). If you need to customize your Javadoc without writing a full-blown doclet from scratch, <A HREF="http://www.filigris.com/products/docflex_javadoc/" TARGET="_blank">DocFlex/Javadoc</A> may be the only tool able to help you! Find out more at <A HREF="http://www.docflex.com/" TARGET="_blank">www.docflex.com</A></SPAN></DIV>
</BODY>
</HTML>